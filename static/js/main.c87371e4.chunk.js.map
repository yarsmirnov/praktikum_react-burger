{"version":3,"sources":["components/loader/loader.module.css","components/modal-overlay/modal-overlay.module.css","components/burger-constructor/burger-constructor.module.css","components/order-info/order-info.module.css","pages/order.module.css","services/constants/action-types.ts","services/reducers/burger-constructor.ts","services/reducers/form-forgot-password.ts","services/reducers/form-login.ts","services/reducers/form-profile.ts","services/reducers/form-register.ts","services/reducers/form-reset-password.ts","services/reducers/ingredients.ts","services/reducers/modal.ts","services/reducers/order.ts","services/reducers/user.ts","services/reducers/websocket.ts","services/reducers/root-reducer.ts","services/actions/websocket.ts","services/store.ts","services/middlewares/socket-middleware.ts","services/hooks.ts","utils/cookie.ts","services/api.ts","services/actions/user.ts","utils/adapter.ts","services/actions/ingredients.ts","services/actions/modal.ts","components/protected-route/protected-route.tsx","components/guest-route/guest-route.tsx","utils/utils.ts","utils/dates.ts","components/preview-item/preview-item.tsx","components/orders-feed/feed-card.tsx","components/loader/loader.tsx","components/order-status/order-status.tsx","components/order-info/order-info.tsx","components/orders-feed/orders-feed.tsx","components/orders-summary/orders-summary.tsx","pages/feed.tsx","services/actions/form-forgot-password.ts","utils/regexp.ts","pages/forgot-password.tsx","components/ingredient-details/ingredient-details.tsx","components/burger-ingredient-card/burger-ingredient-card.tsx","components/ingredient-section/ingredient-section.tsx","components/burger-ingredients/burger-ingredients.tsx","components/burger-constructor/draggable-item.tsx","services/actions/burger-constructor.ts","images/done.gif","components/order-details/order-details.tsx","components/burger-constructor/burger-constructor.tsx","services/actions/order.ts","pages/home.tsx","pages/ingredient.tsx","pages/login.tsx","services/actions/form-login.ts","pages/order.tsx","components/profile-navigation/profile-navigation.tsx","components/form-profile-update-user/form-profile-update-user.tsx","services/actions/form-profile.ts","pages/profile.tsx","components/user-orders/order-card.tsx","components/user-orders/user-orders.tsx","pages/profile-orders.tsx","pages/register.tsx","services/actions/form-register.ts","services/actions/form-reset-password.ts","pages/reset-password.tsx","pages/not-found-404 .tsx","components/app-header/app-header.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/app/app.tsx","index.tsx","components/app-header/app-header.module.css","components/orders-summary/orders-summary.module.css","components/orders-feed/orders-feed.module.css","pages/profile.module.css","pages/ingredient.module.css","components/ingredient-details/ingredient-details.module.css","components/profile-navigation/profile-navigation.module.css","components/user-orders/order-card.module.css","components/preview-item/preview-item.module.css","components/burger-ingredient-card/burger-ingredient-card.module.css","components/order-details/order-details.module.css","components/form-profile-update-user/form-profile-update-user.module.css","components/user-orders/user-orders.module.css","components/burger-ingredients/burger-ingredients.module.css","pages/page-layout.module.css","components/order-status/order-status.module.css","components/ingredient-section/ingredient-section.module.css","components/modal/modal.module.css"],"names":["module","exports","BURGER_CONSTRUCTOR_ADD_ITEM","BURGER_CONSTRUCTOR_REMOVE_ITEM","BURGER_CONSTRUCTOR_MOVE_ITEM","BURGER_CONSTRUCTOR_SET_BUN","BURGER_CONSTRUCTOR_CLEAR_CONSTRUCTOR","INGREDIETNS_REQUEST","INGREDIETNS_SUCCESS","INGREDIETNS_FAILURE","INGREDIETNS_INCREASE_INGREDIENT_COUNT","INGREDIETNS_DECREASE_INGREDIENT_COUNT","INGREDIETNS_RESET_INGREDIENTS_COUNTER","MODAL_OPEN_MODAL","MODAL_CLOSE_MODAL","ORDER_REQUEST","ORDER_SUCCESS","ORDER_FAILURE","ORDER_RESET_REQUEST_STATUS","USER_SET_USER","USER_SET_REGISTER_REQUEST","USER_SET_REGISTER_SUCCESS","USER_SET_REGISTER_FAILURE","USER_SET_LOGIN_REQUEST","USER_SET_LOGIN_SUCCESS","USER_SET_LOGIN_FAILURE","USER_SET_LOGOUT_REQUEST","USER_SET_LOGOUT_SUCCESS","USER_SET_LOGOUT_FAILURE","USER_SET_GET_USER_REQUEST","USER_SET_GET_USER_SUCCESS","USER_SET_GET_USER_FAILURE","USER_SET_PATCH_USER_REQUEST","USER_SET_PATCH_USER_SUCCESS","USER_SET_PATCH_USER_FAILURE","FORM_FORGOT_PASSWORD_SET_VALUE","FORM_FORGOT_PASSWORD_SET_VERIFIED_EMAIL","FORM_FORGOT_PASSWORD_CLEAR_FORM","FORM_FORGOT_PASSWORD_REQUEST","FORM_FORGOT_PASSWORD_SUCCESS","FORM_FORGOT_PASSWORD_FAILURE","FORM_LOGIN_SET_VALUE","FORM_LOGIN_CLEAR_FORM","FORM_PROFILE_SET_INITIAL_VALUE","FORM_PROFILE_SET_VALUE","FORM_PROFILE_RESET_FORM","FORM_PROFILE_CLEAR_FORM","FORM_REGISTER_SET_VALUE","FORM_REGISTER_CLEAR_FORM","FORM_RESET_PASSWORD_SET_VALUE","FORM_RESET_PASSWORD_CLEAR_FORM","FORM_RESET_PASSWORD_REQUEST","FORM_RESET_PASSWORD_SUCCESS","FORM_RESET_PASSWORD_FAILURE","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","initialState","items","BurgerConstructorReducer","state","action","type","payload","filter","item","uuid","dragIndex","dragged","hoverIndex","hovered","updatedItems","splice","bunIndex","findIndex","updatedIngredients","VERIFY_EMAIL_REQUEST","VERIFY_EMAIL_SUCCESS","VERIFY_EMAIL_FAILURE","verifiedEmail","form","email","formForgotPasswordReducer","name","value","password","formLoginReducer","initialForm","formProfileReducer","formRegisterReducer","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILURE","token","formResetPasswordReducer","INGREDIENTS_REQUEST","INGREDIENTS_SUCCESS","INGREDIENTS_FAILURE","ingredientsReducer","id","map","count","itemsWithEmptyCounter","isOpen","ComponentToView","modalReducer","orderData","orderReducer","user","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","PATCH_USER_REQUEST","PATCH_USER_SUCCESS","PATCH_USER_FAILURE","userReducer","wsConnected","orders","total","totalToday","error","websocketReducer","rootReducer","combineReducers","burgerConstructor","formForgotPassword","formLogin","formProfile","formRegister","formResetPassword","ingredients","modal","order","websocket","wsConnectionStart","url","wsConnectionClosed","store","configureStore","reducer","middleware","thunk","socket","next","dispatch","wsUrl","WebSocket","onopen","onerror","event","onmessage","data","parsedData","JSON","parse","wsGetMessage","onclose","message","send","stringify","devTools","process","useDispatch","dispatchHook","useSelector","selectorHook","getCookie","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","baseApi","refreshTokenRequest","a","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","localStorage","getItem","getIngredientsRequest","getUserRequest","getOrderRequest","orderNumber","registerUserRequest","loginRequest","patchUserRequest","logoutRequest","orderRequest","forgotPasswordRequest","resetPasswordRequest","setUserAction","refreshToken","afterRefresh","then","res","setItem","accessToken","catch","err","loadUserData","ok","status","Error","json","success","console","patchUserData","adaptIngredients","length","_id","proteins","fat","carbohydrates","calories","price","image","imageMobile","image_mobile","imageLarge","image_large","__v","successAction","getIngredientsAction","response","dataContainer","openModalAction","ProtectedRoute","children","rest","render","location","to","pathname","from","GuestRoute","getIngredientsData","idList","ingredientsDatabase","ingredientsToShow","uniqueIdsWithCount","reduce","acc","key","toString","ingredientData","find","ingredient","img","unshift","push","Object","entries","formatDate","dateString","moment","locale","calendar","PreviewItem","leftItems","className","styles","item_last","more","src","alt","FeedCard","orderInfo","ingredientsList","createdAt","number","orderDate","ingredientsData","useMemo","totalPrice","ingredientsToPreview","slice","card","card_header","String","padStart","card_footer","card_ingredientsPreview","card_totalPrice","card_totalPriceIcon","Loader","ldsEllipsis","getStatusText","OrderStatus","default","OrderInfo","useParams","ordersList","parseInt","getOrderDataFromOrders","loaderContainer","orderNumberToShow","dateToShow","pageContainer","orderName","orderStatus","orderComposition","ingredientPreview","ingredientName","ingredientPrice","generateIngredientElement","orderColumns","orderTotalPrice","OrdersFeed","useLocation","useRouteMatch","list","list_link","background","onClick","getLastordersByStatus","OrdersSummary","doneOrders","inProgressOrders","ordersStatusContainer","ordersStatusColumn","orderStatusTitle","orderIdToShow","orderId","orderId_done","FeedPage","useEffect","layoutStyles","setVerifiedEmailAction","regExpEmail","ForgotPasswordPage","history","useHistory","useState","isFormValid","setIsFormValid","onInputChange","useCallback","evt","test","target","handleSubmit","preventDefault","getState","formData","formContainer","onSubmit","inputWrapper","placeholder","onChange","errorText","size","link","IngredientDetails","title","width","height","composition","compositionItem","BurgerIngredientCard","useDrag","dragRef","ref","counter","IngredientSection","isActive","sectionRef","titleRef","scrollIntoHeading","current","scrollIntoView","behavior","block","navTabs","navTitle","sectionTitle","BurgerIngredients","setCurrent","useInView","threshold","bunSectionRef","bunInView","inView","sauceSectionRef","sauceInView","mainSectionRef","mainInView","sectionRefs","bunTitleRef","useRef","sauceTitleRef","mainTitleRef","titleRefs","scrollToSection","scrollSettings","navigation","tab","active","catalog","DraggableItem","index","handleClose","dragabbleRef","collect","monitor","isDrag","isDragging","dragItem","useDrop","accept","hover","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","dropTarget","listItem","draggingItem","node","itemIcon","text","thumbnail","OrderDetails","orderText","successGif","BurgerConstructor","drop","setBunAction","uuidv4","addItemAction","canAccept","canDrop","hasBun","setHasBun","bun","fillings","orderList","handleButtonClick","requestData","handleRemoveClick","orderButton","emptyConstructor","emptyConstructor_maxHeight","isLocked","orderTotal","orderCurrencyIcon","HomePage","DndProvider","backend","HTML5Backend","IngredientPage","container","LoginPage","isPasswordVisable","setPasswordVisability","isEmailValid","setIsEmailValid","isPasswordValid","setIsPasswordValid","onIconClick","split","loginUser","icon","OrderPage","setOrder","PENDING","SUCCESS","ERROR","requestStatus","setRequesStatus","LinkClasses","navLink","navLink_active","ProfileNavigation","extraClasses","onExitClick","removeItem","list_item","exact","activeClassName","FormProfileUpdateUser","onResetButtonClick","formControls","ProfilePage","columnsContainer","navContainer","profileContent","OrderCard","UserOrders","sortedOrders","reverse","ProfileOrdersPage","RegisterPage","registerUser","failureAction","ResetPasswordPage","NotFound404","LinksUrl","AppHeader","header","header_container","appNavigation","link_active","userMenu","ModalOverlay","closeModal","overlayRef","handleClick","handleEscPress","addEventListener","removeEventListener","overlay","modalRoot","getElementById","Modal","createPortal","closeButton","ModalSwitch","handleModalClose","goBack","path","App","basename","ReactDOM"],"mappings":"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","file":"static/js/main.c87371e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsEllipsis\":\"loader_ldsEllipsis__Mj9H_\",\"ldsEllipsis1\":\"loader_ldsEllipsis1__35Jt6\",\"ldsEllipsis2\":\"loader_ldsEllipsis2__3D8XY\",\"ldsEllipsis3\":\"loader_ldsEllipsis3__1fBRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__2EkGd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canAccept\":\"burger-constructor_canAccept__2qkSB\",\"emptyConstructor\":\"burger-constructor_emptyConstructor__2kG-f\",\"emptyConstructor_maxHeight\":\"burger-constructor_emptyConstructor_maxHeight__93dJN\",\"ingredientsList\":\"burger-constructor_ingredientsList__Qp6LU\",\"listItem\":\"burger-constructor_listItem__3iyf8\",\"draggingItem\":\"burger-constructor_draggingItem__26ji7\",\"itemIcon\":\"burger-constructor_itemIcon__n-wxe\",\"order\":\"burger-constructor_order__2Q8qx\",\"orderTotal\":\"burger-constructor_orderTotal__vvBTV\",\"orderCurrencyIcon\":\"burger-constructor_orderCurrencyIcon__1-a5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"order-info_loaderContainer__2U50Z\",\"pageContainer\":\"order-info_pageContainer__2WXIa\",\"orderNumber\":\"order-info_orderNumber__1D023\",\"orderName\":\"order-info_orderName__2bpAG\",\"orderStatus\":\"order-info_orderStatus__3_cd1\",\"orderComposition\":\"order-info_orderComposition__2tShS\",\"ingredientsList\":\"order-info_ingredientsList__3QoxT\",\"ingredient\":\"order-info_ingredient__RXSBr\",\"ingredientPreview\":\"order-info_ingredientPreview__Gmucx\",\"ingredientName\":\"order-info_ingredientName__3kz4p\",\"ingredientPrice\":\"order-info_ingredientPrice__1x_hl\",\"orderColumns\":\"order-info_orderColumns__3RNQi\",\"orderDate\":\"order-info_orderDate__2LvqF\",\"orderTotalPrice\":\"order-info_orderTotalPrice__10CtS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"order_pageContainer__3cbhU\",\"orderNumber\":\"order_orderNumber__2EuFS\",\"orderName\":\"order_orderName__HLEVL\",\"orderStatus\":\"order_orderStatus__3NLd9\",\"statusDone\":\"order_statusDone__ovzdm\",\"statusInWork\":\"order_statusInWork__2OwQ5\",\"statusCanseled\":\"order_statusCanseled__2M-Si\",\"orderComposition\":\"order_orderComposition__M6Tet\",\"ingredientsList\":\"order_ingredientsList__2-7JK\",\"ingredient\":\"order_ingredient__KFhol\",\"ingredientPreview\":\"order_ingredientPreview__1d5mO\",\"ingredientName\":\"order_ingredientName__1-R1F\",\"ingredientPrice\":\"order_ingredientPrice__3HhL3\",\"orderColumns\":\"order_orderColumns__1gdhd\",\"orderDate\":\"order_orderDate__3B4nF\",\"orderTotalPrice\":\"order_orderTotalPrice__2VAx0\"};","// Burger constructor\r\nexport const BURGER_CONSTRUCTOR_ADD_ITEM: 'BURGER_CONSTRUCTOR_ADD_ITEM' = 'BURGER_CONSTRUCTOR_ADD_ITEM';\r\nexport const BURGER_CONSTRUCTOR_REMOVE_ITEM: 'BURGER_CONSTRUCTOR_REMOVE_ITEM' = 'BURGER_CONSTRUCTOR_REMOVE_ITEM';\r\nexport const BURGER_CONSTRUCTOR_MOVE_ITEM: 'BURGER_CONSTRUCTOR_MOVE_ITEM' = 'BURGER_CONSTRUCTOR_MOVE_ITEM';\r\nexport const BURGER_CONSTRUCTOR_SET_BUN: 'BURGER_CONSTRUCTOR_SET_BUN' = 'BURGER_CONSTRUCTOR_SET_BUN';\r\nexport const BURGER_CONSTRUCTOR_CLEAR_CONSTRUCTOR: 'BURGER_CONSTRUCTOR_CLEAR_CONSTRUCTOR' = 'BURGER_CONSTRUCTOR_CLEAR_CONSTRUCTOR';\r\n\r\n\r\n// Ingredietns\r\nexport const INGREDIETNS_REQUEST: 'INGREDIETNS_REQUEST' = 'INGREDIETNS_REQUEST';\r\nexport const INGREDIETNS_SUCCESS: 'INGREDIETNS_SUCCESS' = 'INGREDIETNS_SUCCESS';\r\nexport const INGREDIETNS_FAILURE: 'INGREDIETNS_FAILURE' = 'INGREDIETNS_FAILURE';\r\nexport const INGREDIETNS_INCREASE_INGREDIENT_COUNT: 'INGREDIETNS_INCREASE_INGREDIENT_COUNT' = 'INGREDIETNS_INCREASE_INGREDIENT_COUNT';\r\nexport const INGREDIETNS_DECREASE_INGREDIENT_COUNT: 'INGREDIETNS_DECREASE_INGREDIENT_COUNT' = 'INGREDIETNS_DECREASE_INGREDIENT_COUNT';\r\nexport const INGREDIETNS_RESET_INGREDIENTS_COUNTER: 'INGREDIETNS_RESET_INGREDIENTS_COUNTER' = 'INGREDIETNS_RESET_INGREDIENTS_COUNTER';\r\n\r\n\r\n// Modal\r\nexport const MODAL_OPEN_MODAL: 'MODAL_OPEN_MODAL' = 'MODAL_OPEN_MODAL';\r\nexport const MODAL_CLOSE_MODAL: 'MODAL_CLOSE_MODAL' = 'MODAL_CLOSE_MODAL';\r\n\r\n\r\n// Order (from burger constructor)\r\nexport const ORDER_REQUEST: 'ORDER_REQUEST' = 'ORDER_REQUEST';\r\nexport const ORDER_SUCCESS: 'ORDER_SUCCESS' = 'ORDER_SUCCESS';\r\nexport const ORDER_FAILURE: 'ORDER_FAILURE' = 'ORDER_FAILURE';\r\nexport const ORDER_RESET_REQUEST_STATUS: 'ORDER_RESET_REQUEST_STATUS' = 'ORDER_RESET_REQUEST_STATUS';\r\n\r\n\r\n// User\r\nexport const USER_SET_USER: 'USER_SET_USER' = 'USER_SET_USER';\r\n\r\nexport const USER_SET_REGISTER_REQUEST: 'USER_SET_REGISTER_REQUEST' = 'USER_SET_REGISTER_REQUEST';\r\nexport const USER_SET_REGISTER_SUCCESS: 'USER_SET_REGISTER_SUCCESS' = 'USER_SET_REGISTER_SUCCESS';\r\nexport const USER_SET_REGISTER_FAILURE: 'USER_SET_REGISTER_FAILURE' = 'USER_SET_REGISTER_FAILURE';\r\n\r\nexport const USER_SET_LOGIN_REQUEST: 'USER_SET_LOGIN_REQUEST' = 'USER_SET_LOGIN_REQUEST';\r\nexport const USER_SET_LOGIN_SUCCESS: 'USER_SET_LOGIN_SUCCESS' = 'USER_SET_LOGIN_SUCCESS';\r\nexport const USER_SET_LOGIN_FAILURE: 'USER_SET_LOGIN_FAILURE' = 'USER_SET_LOGIN_FAILURE';\r\n\r\nexport const USER_SET_LOGOUT_REQUEST: 'USER_SET_LOGOUT_REQUEST' = 'USER_SET_LOGOUT_REQUEST';\r\nexport const USER_SET_LOGOUT_SUCCESS: 'USER_SET_LOGOUT_SUCCESS' = 'USER_SET_LOGOUT_SUCCESS';\r\nexport const USER_SET_LOGOUT_FAILURE: 'USER_SET_LOGOUT_FAILURE' = 'USER_SET_LOGOUT_FAILURE';\r\n\r\nexport const USER_SET_GET_USER_REQUEST: 'USER_SET_GET_USER_REQUEST' = 'USER_SET_GET_USER_REQUEST';\r\nexport const USER_SET_GET_USER_SUCCESS: 'USER_SET_GET_USER_SUCCESS' = 'USER_SET_GET_USER_SUCCESS';\r\nexport const USER_SET_GET_USER_FAILURE: 'USER_SET_GET_USER_FAILURE' = 'USER_SET_GET_USER_FAILURE';\r\n\r\nexport const USER_SET_PATCH_USER_REQUEST: 'USER_SET_PATCH_USER_REQUEST' = 'USER_SET_PATCH_USER_REQUEST';\r\nexport const USER_SET_PATCH_USER_SUCCESS: 'USER_SET_PATCH_USER_SUCCESS' = 'USER_SET_PATCH_USER_SUCCESS';\r\nexport const USER_SET_PATCH_USER_FAILURE: 'USER_SET_PATCH_USER_FAILURE' = 'USER_SET_PATCH_USER_FAILURE';\r\n\r\n\r\n// User forms like Login, ResetPassword ect.\r\n// Form ForgotPassword\r\nexport const FORM_FORGOT_PASSWORD_SET_VALUE: 'FORM_FORGOT_PASSWORD_SET_VALUE' = 'FORM_FORGOT_PASSWORD_SET_VALUE';\r\nexport const FORM_FORGOT_PASSWORD_SET_VERIFIED_EMAIL: 'FORM_FORGOT_PASSWORD_SET_VERIFIED_EMAIL' = 'FORM_FORGOT_PASSWORD_SET_VERIFIED_EMAIL';\r\nexport const FORM_FORGOT_PASSWORD_CLEAR_FORM: 'FORM_FORGOT_PASSWORD_CLEAR_FORM' = 'FORM_FORGOT_PASSWORD_CLEAR_FORM';\r\nexport const FORM_FORGOT_PASSWORD_REQUEST: 'FORM_FORGOT_PASSWORD_REQUEST' = 'FORM_FORGOT_PASSWORD_REQUEST';\r\nexport const FORM_FORGOT_PASSWORD_SUCCESS: 'FORM_FORGOT_PASSWORD_SUCCESS' = 'FORM_FORGOT_PASSWORD_SUCCESS';\r\nexport const FORM_FORGOT_PASSWORD_FAILURE: 'FORM_FORGOT_PASSWORD_FAILURE' = 'FORM_FORGOT_PASSWORD_FAILURE';\r\n\r\n// Form Login\r\nexport const FORM_LOGIN_SET_VALUE: 'FORM_LOGIN_SET_VALUE' = 'FORM_LOGIN_SET_VALUE';\r\nexport const FORM_LOGIN_CLEAR_FORM: 'FORM_LOGIN_CLEAR_FORM' = 'FORM_LOGIN_CLEAR_FORM';\r\n\r\n// Form Profile\r\nexport const FORM_PROFILE_SET_INITIAL_VALUE: 'FORM_PROFILE_SET_INITIAL_VALUE' = 'FORM_PROFILE_SET_INITIAL_VALUE';\r\nexport const FORM_PROFILE_SET_VALUE: 'FORM_PROFILE_SET_VALUE' = 'FORM_PROFILE_SET_VALUE';\r\nexport const FORM_PROFILE_RESET_FORM: 'FORM_PROFILE_RESET_FORM' = 'FORM_PROFILE_RESET_FORM';\r\nexport const FORM_PROFILE_CLEAR_FORM: 'FORM_PROFILE_CLEAR_FORM' = 'FORM_PROFILE_CLEAR_FORM';\r\n\r\n// Form Register\r\nexport const FORM_REGISTER_SET_VALUE: 'FORM_REGISTER_SET_VALUE' = 'FORM_REGISTER_SET_VALUE';\r\nexport const FORM_REGISTER_CLEAR_FORM: 'FORM_REGISTER_CLEAR_FORM' = 'FORM_REGISTER_CLEAR_FORM';\r\n\r\n// Form Reset password\r\nexport const FORM_RESET_PASSWORD_SET_VALUE: 'FORM_RESET_PASSWORD_SET_VALUE' = 'FORM_RESET_PASSWORD_SET_VALUE';\r\nexport const FORM_RESET_PASSWORD_CLEAR_FORM: 'FORM_RESET_PASSWORD_CLEAR_FORM' = 'FORM_RESET_PASSWORD_CLEAR_FORM';\r\nexport const FORM_RESET_PASSWORD_REQUEST: 'FORM_RESET_PASSWORD_REQUEST' = 'FORM_RESET_PASSWORD_REQUEST';\r\nexport const FORM_RESET_PASSWORD_SUCCESS: 'FORM_RESET_PASSWORD_SUCCESS' = 'FORM_RESET_PASSWORD_SUCCESS';\r\nexport const FORM_RESET_PASSWORD_FAILURE: 'FORM_RESET_PASSWORD_FAILURE' = 'FORM_RESET_PASSWORD_FAILURE';\r\n\r\n\r\n// Websocket\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\r\n","import {\r\n  BURGER_CONSTRUCTOR_ADD_ITEM,\r\n  BURGER_CONSTRUCTOR_REMOVE_ITEM,\r\n  BURGER_CONSTRUCTOR_MOVE_ITEM,\r\n  BURGER_CONSTRUCTOR_SET_BUN,\r\n  BURGER_CONSTRUCTOR_CLEAR_CONSTRUCTOR,\r\n} from '../constants/action-types';\r\nimport { TBurgerConstructorActions } from '../actions/burger-constructor';\r\nimport { TConstructorIngredient } from '../types/data';\r\n\r\n\r\ntype TState = {\r\n  items: Array<TConstructorIngredient>\r\n}\r\n\r\nconst initialState: TState = {\r\n  items: [],\r\n};\r\n\r\nconst BurgerConstructorReducer = (state = initialState, action: TBurgerConstructorActions): TState => {\r\n  switch (action.type) {\r\n\r\n    case BURGER_CONSTRUCTOR_ADD_ITEM: {\r\n      return {\r\n        ...state,\r\n        items: [ ...state.items, {...action.payload} ],\r\n      }\r\n    }\r\n\r\n    case BURGER_CONSTRUCTOR_REMOVE_ITEM: {\r\n      return {\r\n        ...state,\r\n      items: [...state.items].filter(item => item.uuid !== action.payload),\r\n      }\r\n    }\r\n\r\n    case BURGER_CONSTRUCTOR_MOVE_ITEM: {\r\n      const dragIndex = action.payload.dragged;\r\n      const hoverIndex = action.payload.hovered;\r\n\r\n      if (dragIndex === hoverIndex) {\r\n        return state;\r\n      }\r\n\r\n      const updatedItems = [...state.items];\r\n      updatedItems.splice(hoverIndex, 0, updatedItems.splice(dragIndex, 1)[0]);\r\n\r\n      return ({\r\n        ...state,\r\n        items: [...updatedItems],\r\n      })\r\n    }\r\n\r\n    case BURGER_CONSTRUCTOR_SET_BUN: {\r\n      const bunIndex = [...state.items]\r\n        .findIndex(item => item.type === 'bun');\r\n\r\n      if (bunIndex >= 0) {\r\n        const updatedIngredients = [...state.items];\r\n\r\n        updatedIngredients\r\n          .splice(bunIndex, 1, { ...action.payload });\r\n\r\n        return ({\r\n          ...state,\r\n          items: updatedIngredients\r\n        });\r\n      }\r\n\r\n      return ({\r\n        ...state,\r\n        items: [...state.items,\r\n          { ...action.payload }\r\n        ],\r\n      });\r\n    }\r\n\r\n    case BURGER_CONSTRUCTOR_CLEAR_CONSTRUCTOR: {\r\n      return initialState\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default BurgerConstructorReducer;\r\n","import {\r\n  FORM_FORGOT_PASSWORD_SET_VALUE,\r\n  FORM_FORGOT_PASSWORD_SET_VERIFIED_EMAIL,\r\n  FORM_FORGOT_PASSWORD_CLEAR_FORM,\r\n  FORM_FORGOT_PASSWORD_REQUEST,\r\n  FORM_FORGOT_PASSWORD_SUCCESS,\r\n  FORM_FORGOT_PASSWORD_FAILURE,\r\n} from '../constants/action-types';\r\nimport { TFormForgotPasswordActions } from '../actions/form-forgot-password';\r\nimport { TUserForgotPasswordForm } from '../types/api';\r\n\r\nexport type TState = {\r\n  VERIFY_EMAIL_REQUEST: boolean;\r\n  VERIFY_EMAIL_SUCCESS: boolean;\r\n  VERIFY_EMAIL_FAILURE: boolean;\r\n\r\n  verifiedEmail: string | null;\r\n\r\n  form: TUserForgotPasswordForm;\r\n}\r\n\r\nexport const initialState: TState = {\r\n  VERIFY_EMAIL_REQUEST: false,\r\n  VERIFY_EMAIL_SUCCESS: false,\r\n  VERIFY_EMAIL_FAILURE: false,\r\n\r\n  verifiedEmail: null,\r\n\r\n  form: {\r\n    email: '',\r\n  }\r\n};\r\n\r\n\r\nconst formForgotPasswordReducer = (state = initialState, action: TFormForgotPasswordActions): TState => {\r\n  switch (action.type) {\r\n\r\n    case FORM_FORGOT_PASSWORD_SET_VALUE: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          [action.payload.name]: action.payload.value,\r\n        }\r\n      }\r\n    }\r\n\r\n    case FORM_FORGOT_PASSWORD_SET_VERIFIED_EMAIL: {\r\n      return {\r\n        ...state,\r\n        verifiedEmail: action.payload,\r\n        form: {...state.form},\r\n      }\r\n    }\r\n\r\n    case FORM_FORGOT_PASSWORD_CLEAR_FORM: {\r\n      return {\r\n        ...initialState,\r\n        verifiedEmail: state.verifiedEmail,\r\n      }\r\n    }\r\n\r\n    case FORM_FORGOT_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        VERIFY_EMAIL_REQUEST: true,\r\n        VERIFY_EMAIL_SUCCESS: false,\r\n        VERIFY_EMAIL_FAILURE: false,\r\n        form: {...state.form},\r\n      }\r\n    }\r\n\r\n    case FORM_FORGOT_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        VERIFY_EMAIL_REQUEST: false,\r\n        VERIFY_EMAIL_SUCCESS: true,\r\n        VERIFY_EMAIL_FAILURE: false,\r\n        form: {...state.form},\r\n      }\r\n    }\r\n\r\n    case FORM_FORGOT_PASSWORD_FAILURE: {\r\n      return {\r\n        ...state,\r\n        VERIFY_EMAIL_REQUEST: false,\r\n        VERIFY_EMAIL_SUCCESS: false,\r\n        VERIFY_EMAIL_FAILURE: true,\r\n        form: {...state.form},\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport default formForgotPasswordReducer;\r\n","import {\r\n  FORM_LOGIN_SET_VALUE,\r\n  FORM_LOGIN_CLEAR_FORM\r\n} from '../constants/action-types';\r\nimport { TFormLoginActions } from '../actions/form-login';\r\nimport { TUserLoginForm } from '../types/api';\r\n\r\n\r\ntype TState = {\r\n  form: TUserLoginForm;\r\n}\r\n\r\nexport const initialState: TState = {\r\n  form: {\r\n    email: \"\",\r\n    password: \"\",\r\n  }\r\n};\r\n\r\nconst formLoginReducer = (state = initialState, action: TFormLoginActions): TState => {\r\n  switch (action.type) {\r\n\r\n    case FORM_LOGIN_SET_VALUE: {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          [action.payload.name]: action.payload.value,\r\n        }\r\n      }\r\n    }\r\n\r\n    case FORM_LOGIN_CLEAR_FORM: {\r\n      return initialState\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default formLoginReducer;\r\n","import {\r\n  FORM_PROFILE_SET_INITIAL_VALUE,\r\n  FORM_PROFILE_SET_VALUE,\r\n  FORM_PROFILE_RESET_FORM,\r\n  FORM_PROFILE_CLEAR_FORM\r\n} from '../constants/action-types';\r\nimport {\r\n  TFormProfileActions\r\n} from '../actions/form-profile';\r\nimport { TUserPatchForm } from '../types/api';\r\n\r\n\r\ntype TState = {\r\n  initialForm: TUserPatchForm;\r\n  form: TUserPatchForm;\r\n}\r\n\r\nexport const initialState: TState = {\r\n  initialForm: {\r\n    email: '',\r\n    password: '',\r\n    name: '',\r\n  },\r\n\r\n  form: {\r\n    email: '',\r\n    password: '',\r\n    name: '',\r\n  },\r\n};\r\n\r\n\r\nconst formProfileReducer = (state = initialState, action: TFormProfileActions): TState => {\r\n  switch (action.type) {\r\n\r\n    case (FORM_PROFILE_SET_INITIAL_VALUE): {\r\n      return {\r\n        ...state,\r\n        initialForm: {...state.initialForm, ...action.payload},\r\n        form: {...state.initialForm, ...action.payload},\r\n      }\r\n    }\r\n\r\n    case (FORM_PROFILE_SET_VALUE): {\r\n      return {\r\n        ...state,\r\n        initialForm: {...state.initialForm},\r\n        form: {\r\n          ...state.form,\r\n          [action.payload.name]: action.payload.value,\r\n        }\r\n      }\r\n    }\r\n\r\n    case (FORM_PROFILE_RESET_FORM): {\r\n      return {\r\n        ...state,\r\n        initialForm: {...state.initialForm},\r\n        form: {...state.initialForm},\r\n      }\r\n    }\r\n\r\n    case (FORM_PROFILE_CLEAR_FORM): {\r\n      return initialState\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default formProfileReducer;\r\n","import {\r\n  FORM_REGISTER_SET_VALUE,\r\n  FORM_REGISTER_CLEAR_FORM\r\n} from '../constants/action-types';\r\nimport {\r\n  TFormRegisterActions\r\n} from '../actions/form-register';\r\nimport { TUserRegisterForm } from '../types/api';\r\n\r\n\r\ntype TState = {\r\n  form: TUserRegisterForm;\r\n}\r\n\r\nconst initialState: TState = {\r\n  form: {\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n  }\r\n}\r\n\r\n\r\nconst formRegisterReducer = (state = initialState, action: TFormRegisterActions): TState => {\r\n  switch (action.type) {\r\n\r\n    case (FORM_REGISTER_SET_VALUE): {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          [action.payload.name]: action.payload.value,\r\n        }\r\n      }\r\n    }\r\n\r\n    case (FORM_REGISTER_CLEAR_FORM): {\r\n      return initialState\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport default formRegisterReducer;\r\n","import {\r\n  FORM_RESET_PASSWORD_SET_VALUE,\r\n  FORM_RESET_PASSWORD_CLEAR_FORM,\r\n  FORM_RESET_PASSWORD_REQUEST,\r\n  FORM_RESET_PASSWORD_SUCCESS,\r\n  FORM_RESET_PASSWORD_FAILURE,\r\n} from '../constants/action-types';\r\nimport {\r\n  TFormResetPasswordActions\r\n} from '../actions/form-reset-password';\r\nimport { TUserResetPasswordForm } from '../types/api';\r\n\r\n\r\ntype TState = {\r\n  RESET_PASSWORD_REQUEST: boolean;\r\n  RESET_PASSWORD_SUCCESS: boolean;\r\n  RESET_PASSWORD_FAILURE: boolean;\r\n\r\n  form: TUserResetPasswordForm\r\n}\r\n\r\nexport const initialState: TState = {\r\n  RESET_PASSWORD_REQUEST: false,\r\n  RESET_PASSWORD_SUCCESS: false,\r\n  RESET_PASSWORD_FAILURE: false,\r\n\r\n  form: {\r\n    password: '',\r\n    token: '',\r\n  }\r\n}\r\n\r\n\r\nconst formResetPasswordReducer = (state = initialState, action: TFormResetPasswordActions): TState => {\r\n  switch (action.type) {\r\n\r\n    case (FORM_RESET_PASSWORD_SET_VALUE): {\r\n      return {\r\n        ...state,\r\n        form: {\r\n          ...state.form,\r\n          [action.payload.name]: action.payload.value,\r\n        }\r\n      }\r\n    }\r\n\r\n    case (FORM_RESET_PASSWORD_CLEAR_FORM): {\r\n      return initialState\r\n    }\r\n\r\n    case (FORM_RESET_PASSWORD_REQUEST): {\r\n      return {\r\n        ...state,\r\n        RESET_PASSWORD_REQUEST: true,\r\n        RESET_PASSWORD_SUCCESS: false,\r\n        RESET_PASSWORD_FAILURE: false,\r\n        form: {...state.form},\r\n      }\r\n    }\r\n\r\n    case (FORM_RESET_PASSWORD_SUCCESS): {\r\n      return {\r\n        ...state,\r\n        RESET_PASSWORD_REQUEST: false,\r\n        RESET_PASSWORD_SUCCESS: true,\r\n        RESET_PASSWORD_FAILURE: false,\r\n        form: {...initialState.form},\r\n      }\r\n    }\r\n\r\n    case (FORM_RESET_PASSWORD_FAILURE): {\r\n      return {\r\n        ...state,\r\n        RESET_PASSWORD_REQUEST: false,\r\n        RESET_PASSWORD_SUCCESS: false,\r\n        RESET_PASSWORD_FAILURE: true,\r\n        form: {...state.form},\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default formResetPasswordReducer;\r\n","import {\r\n  INGREDIETNS_REQUEST,\r\n  INGREDIETNS_SUCCESS,\r\n  INGREDIETNS_FAILURE,\r\n  INGREDIETNS_INCREASE_INGREDIENT_COUNT,\r\n  INGREDIETNS_DECREASE_INGREDIENT_COUNT,\r\n  INGREDIETNS_RESET_INGREDIENTS_COUNTER\r\n} from '../constants/action-types';\r\nimport {\r\n  TIngredientActions\r\n} from '../actions/ingredients';\r\nimport { TIngredient } from '../types/data';\r\n\r\n\r\ntype TState = {\r\n  INGREDIENTS_REQUEST: boolean;\r\n  INGREDIENTS_SUCCESS: boolean;\r\n  INGREDIENTS_FAILURE: boolean;\r\n  items: Array<TIngredient>,\r\n}\r\n\r\nexport const initialState: TState = {\r\n  INGREDIENTS_REQUEST: false,\r\n  INGREDIENTS_SUCCESS: false,\r\n  INGREDIENTS_FAILURE: false,\r\n  items: [],\r\n};\r\n\r\n\r\nconst ingredientsReducer = (state = initialState, action: TIngredientActions): TState => {\r\n  switch (action.type) {\r\n\r\n    case (INGREDIETNS_REQUEST): {\r\n      return {\r\n        ...state,\r\n        INGREDIENTS_REQUEST: true,\r\n        INGREDIENTS_SUCCESS: false,\r\n        INGREDIENTS_FAILURE: false,\r\n        items: [...state.items],\r\n      }\r\n    }\r\n\r\n    case (INGREDIETNS_SUCCESS): {\r\n      return {\r\n        ...state,\r\n        INGREDIENTS_REQUEST: false,\r\n        INGREDIENTS_SUCCESS: true,\r\n        INGREDIENTS_FAILURE: false,\r\n        items: action.payload,\r\n      }\r\n    }\r\n\r\n    case (INGREDIETNS_FAILURE): {\r\n      return {\r\n        ...initialState,\r\n        INGREDIENTS_REQUEST: false,\r\n        INGREDIENTS_SUCCESS: false,\r\n        INGREDIENTS_FAILURE: true,\r\n      }\r\n    }\r\n\r\n    case (INGREDIETNS_INCREASE_INGREDIENT_COUNT): {\r\n      const {id, type} = action.payload;\r\n      const updatedIngredients = [...state.items].map(\r\n        item => {\r\n          if (type === 'bun' && item.type === 'bun') {\r\n            return ({\r\n              ...item,\r\n              count: item.id === id ? 2 : 0,\r\n            });\r\n          }\r\n\r\n          if (item.id === id) {\r\n            return {\r\n              ...item,\r\n              count: item.count + 1,\r\n            }\r\n          }\r\n          return item;\r\n        }\r\n      );\r\n      return ({\r\n        ...state,\r\n        items: updatedIngredients,\r\n      })\r\n    }\r\n\r\n    case (INGREDIETNS_DECREASE_INGREDIENT_COUNT): {\r\n      const id = action.payload;\r\n      const updatedIngredients = [...state.items].map(\r\n        item => {\r\n          if (item.id === id) {\r\n            return {\r\n              ...item,\r\n              count: item.count - 1,\r\n            }\r\n          }\r\n          return item;\r\n        }\r\n      );\r\n      return ({\r\n        ...state,\r\n        items: updatedIngredients,\r\n      })\r\n    }\r\n\r\n    case (INGREDIETNS_RESET_INGREDIENTS_COUNTER): {\r\n      const itemsWithEmptyCounter = state.items.map(\r\n        item => {\r\n          if (item.count) {\r\n            return { ...item, count: 0 };\r\n          }\r\n          return item;\r\n        }\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        items: itemsWithEmptyCounter,\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport default ingredientsReducer;\r\n","import { ElementType } from 'react';\r\nimport {\r\n  MODAL_OPEN_MODAL,\r\n  MODAL_CLOSE_MODAL\r\n} from '../constants/action-types';\r\nimport { ModalActions } from '../actions/modal';\r\n\r\n\r\ntype TState = {\r\n  isOpen: boolean,\r\n  ComponentToView: ElementType | null;\r\n}\r\n\r\nexport const initialState: TState = {\r\n  isOpen: false,\r\n  ComponentToView: null,\r\n};\r\n\r\n\r\nconst modalReducer = (state = initialState, action: ModalActions): TState => {\r\n  switch (action.type) {\r\n\r\n    case (MODAL_OPEN_MODAL): {\r\n      return {\r\n        isOpen: true,\r\n        ComponentToView: action.payload,\r\n      }\r\n    }\r\n\r\n    case (MODAL_CLOSE_MODAL): {\r\n      return initialState\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport default modalReducer;\r\n","import {\r\n  ORDER_REQUEST,\r\n  ORDER_SUCCESS,\r\n  ORDER_FAILURE,\r\n  ORDER_RESET_REQUEST_STATUS\r\n} from '../constants/action-types';\r\nimport { TOrderActions } from '../actions/order';\r\nimport { TOrderRecieved } from '../types/data';\r\n\r\ntype TState = {\r\n  ORDER_REQUEST: boolean;\r\n  ORDER_SUCCESS: boolean;\r\n  ORDER_FAILURE: boolean;\r\n  orderData: TOrderRecieved | {};\r\n}\r\n\r\nexport const initialState = {\r\n  ORDER_REQUEST: false,\r\n  ORDER_SUCCESS: false,\r\n  ORDER_FAILURE: false,\r\n  orderData: {},\r\n};\r\n\r\n\r\nconst orderReducer = (state = initialState, action: TOrderActions): TState => {\r\n  switch (action.type) {\r\n\r\n    case (ORDER_REQUEST): {\r\n      return {\r\n        ...state,\r\n        ORDER_REQUEST: true,\r\n        ORDER_SUCCESS: false,\r\n        ORDER_FAILURE: false,\r\n      }\r\n    }\r\n\r\n    case (ORDER_SUCCESS): {\r\n      return {\r\n        ...state,\r\n        ORDER_REQUEST: false,\r\n        ORDER_SUCCESS: true,\r\n        ORDER_FAILURE: false,\r\n        orderData: {...action.payload}\r\n      }\r\n    }\r\n\r\n    case (ORDER_FAILURE): {\r\n      return {\r\n        ...initialState,\r\n        ORDER_REQUEST: false,\r\n        ORDER_SUCCESS: false,\r\n        ORDER_FAILURE: true,\r\n      }\r\n    }\r\n\r\n    case (ORDER_RESET_REQUEST_STATUS): {\r\n      return {\r\n        ...initialState,\r\n        orderData: {...state.orderData}\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default orderReducer;\r\n","import {\r\n  USER_SET_USER,\r\n\r\n  USER_SET_REGISTER_REQUEST,\r\n  USER_SET_REGISTER_SUCCESS,\r\n  USER_SET_REGISTER_FAILURE,\r\n\r\n  USER_SET_LOGIN_REQUEST,\r\n  USER_SET_LOGIN_SUCCESS,\r\n  USER_SET_LOGIN_FAILURE,\r\n\r\n  USER_SET_LOGOUT_REQUEST,\r\n  USER_SET_LOGOUT_SUCCESS,\r\n  USER_SET_LOGOUT_FAILURE,\r\n\r\n  USER_SET_GET_USER_REQUEST,\r\n  USER_SET_GET_USER_SUCCESS,\r\n  USER_SET_GET_USER_FAILURE,\r\n\r\n  USER_SET_PATCH_USER_REQUEST,\r\n  USER_SET_PATCH_USER_SUCCESS,\r\n  USER_SET_PATCH_USER_FAILURE\r\n} from '../constants/action-types';\r\nimport { TUser, TUserActions } from '../actions/user';\r\n\r\n\r\ntype TState = {\r\n  user: TUser;\r\n\r\n  REGISTER_REQUEST: boolean;\r\n  REGISTER_SUCCESS: boolean;\r\n  REGISTER_FAILURE: boolean;\r\n\r\n  LOGIN_REQUEST: boolean;\r\n  LOGIN_SUCCESS: boolean;\r\n  LOGIN_FAILURE: boolean;\r\n\r\n  LOGOUT_REQUEST: boolean;\r\n  LOGOUT_SUCCESS: boolean;\r\n  LOGOUT_FAILURE: boolean;\r\n\r\n  GET_USER_REQUEST: boolean;\r\n  GET_USER_SUCCESS: boolean;\r\n  GET_USER_FAILURE: boolean;\r\n\r\n  PATCH_USER_REQUEST: boolean;\r\n  PATCH_USER_SUCCESS: boolean;\r\n  PATCH_USER_FAILURE: boolean;\r\n}\r\n\r\nexport const initialState: TState = {\r\n  user: null,\r\n\r\n  REGISTER_REQUEST: false,\r\n  REGISTER_SUCCESS: false,\r\n  REGISTER_FAILURE: false,\r\n\r\n  LOGIN_REQUEST: false,\r\n  LOGIN_SUCCESS: false,\r\n  LOGIN_FAILURE: false,\r\n\r\n  LOGOUT_REQUEST: false,\r\n  LOGOUT_SUCCESS: false,\r\n  LOGOUT_FAILURE: false,\r\n\r\n  GET_USER_REQUEST: false,\r\n  GET_USER_SUCCESS: false,\r\n  GET_USER_FAILURE: false,\r\n\r\n  PATCH_USER_REQUEST: false,\r\n  PATCH_USER_SUCCESS: false,\r\n  PATCH_USER_FAILURE: false,\r\n};\r\n\r\n\r\nconst userReducer = (state = initialState, action: TUserActions): TState => {\r\n  switch (action.type) {\r\n\r\n    case (USER_SET_USER): {\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_REGISTER_REQUEST): {\r\n      return {\r\n        ...state,\r\n        REGISTER_REQUEST: true,\r\n        REGISTER_SUCCESS: false,\r\n        REGISTER_FAILURE: false,\r\n        user: null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_REGISTER_SUCCESS): {\r\n      return {\r\n        ...state,\r\n        REGISTER_REQUEST: false,\r\n        REGISTER_SUCCESS: true,\r\n        REGISTER_FAILURE: false,\r\n        user: state.user ? {...state.user} : null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_REGISTER_FAILURE): {\r\n      return {\r\n        ...state,\r\n        REGISTER_REQUEST: false,\r\n        REGISTER_SUCCESS: false,\r\n        REGISTER_FAILURE: true,\r\n        user: null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_LOGIN_REQUEST): {\r\n      return {\r\n        ...state,\r\n        LOGIN_REQUEST: true,\r\n        LOGIN_SUCCESS: false,\r\n        LOGIN_FAILURE: false,\r\n        user: null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_LOGIN_SUCCESS): {\r\n      return {\r\n        ...state,\r\n        LOGIN_REQUEST: false,\r\n        LOGIN_SUCCESS: true,\r\n        LOGIN_FAILURE: false,\r\n        user: state.user ? {...state.user} : null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_LOGIN_FAILURE): {\r\n      return {\r\n        ...state,\r\n        LOGIN_REQUEST: false,\r\n        LOGIN_SUCCESS: false,\r\n        LOGIN_FAILURE: true,\r\n        user: null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_LOGOUT_REQUEST): {\r\n      return {\r\n        ...state,\r\n        LOGOUT_REQUEST: true,\r\n        LOGOUT_SUCCESS: false,\r\n        LOGOUT_FAILURE: false,\r\n        user: state.user ? {...state.user} : null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_LOGOUT_SUCCESS): {\r\n      return {\r\n        ...state,\r\n        LOGOUT_REQUEST: false,\r\n        LOGOUT_SUCCESS: true,\r\n        LOGOUT_FAILURE: false,\r\n        user: null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_LOGOUT_FAILURE): {\r\n      return {\r\n        ...state,\r\n        LOGOUT_REQUEST: false,\r\n        LOGOUT_SUCCESS: false,\r\n        LOGOUT_FAILURE: true,\r\n        user: state.user ? {...state.user} : null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_GET_USER_REQUEST): {\r\n      return {\r\n        ...state,\r\n        GET_USER_REQUEST: true,\r\n        GET_USER_SUCCESS: false,\r\n        GET_USER_FAILURE: false,\r\n        user: state.user ? {...state.user} : null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_GET_USER_SUCCESS): {\r\n      return {\r\n        ...state,\r\n        GET_USER_REQUEST: false,\r\n        GET_USER_SUCCESS: true,\r\n        GET_USER_FAILURE: false,\r\n        user: state.user ? {...state.user} : null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_GET_USER_FAILURE): {\r\n      return {\r\n        ...state,\r\n        GET_USER_REQUEST: false,\r\n        GET_USER_SUCCESS: false,\r\n        GET_USER_FAILURE: true,\r\n        user: state.user ? {...state.user} : null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_PATCH_USER_REQUEST): {\r\n      return {\r\n        ...state,\r\n        PATCH_USER_REQUEST: true,\r\n        PATCH_USER_SUCCESS: false,\r\n        PATCH_USER_FAILURE: false,\r\n        user: state.user ? {...state.user} : null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_PATCH_USER_SUCCESS): {\r\n      return {\r\n        ...state,\r\n        PATCH_USER_REQUEST: false,\r\n        PATCH_USER_SUCCESS: true,\r\n        PATCH_USER_FAILURE: false,\r\n        user: state.user ? {...state.user} : null,\r\n      }\r\n    }\r\n\r\n    case (USER_SET_PATCH_USER_FAILURE): {\r\n      return {\r\n        ...state,\r\n        PATCH_USER_REQUEST: false,\r\n        PATCH_USER_SUCCESS: false,\r\n        PATCH_USER_FAILURE: true,\r\n        user: state.user ? {...state.user} : null,\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport default userReducer;\r\n","import {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE\r\n} from '../constants/action-types';\r\nimport { TWsActions } from '../actions/websocket';\r\nimport { TWsOrderRecieved } from '../types/data';\r\n\r\n\r\ntype TState = {\r\n  wsConnected: boolean,\r\n  orders: Array<TWsOrderRecieved>,\r\n  total: number,\r\n  totalToday: number,\r\n  error: any\r\n}\r\n\r\nexport const initialState: TState = {\r\n  wsConnected: false,\r\n  orders: [],\r\n  total: 0,\r\n  totalToday: 0,\r\n  error: null\r\n};\r\n\r\n\r\nconst websocketReducer = (state = initialState, action: TWsActions): TState => {\r\n  switch (action.type) {\r\n\r\n    case (WS_CONNECTION_START): {\r\n      return initialState\r\n    }\r\n\r\n    case (WS_CONNECTION_SUCCESS): {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        wsConnected: true\r\n      }\r\n    }\r\n\r\n    case (WS_CONNECTION_ERROR): {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        wsConnected: false\r\n      }\r\n    }\r\n\r\n    case (WS_CONNECTION_CLOSED): {\r\n      return initialState\r\n    }\r\n\r\n    case (WS_GET_MESSAGE): {\r\n      const { orders, total, totalToday } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        orders,\r\n        total,\r\n        totalToday,\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n};\r\n\r\nexport default websocketReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport burgerConstructor from './burger-constructor';\r\nimport formForgotPassword from './form-forgot-password';\r\nimport formLogin from './form-login';\r\nimport formProfile from './form-profile';\r\nimport formRegister from './form-register';\r\nimport formResetPassword from './form-reset-password';\r\nimport ingredients from './ingredients';\r\nimport modal from './modal';\r\nimport order from './order';\r\nimport user from './user';\r\nimport websocket from './websocket';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  burgerConstructor,\r\n  formForgotPassword,\r\n  formLogin,\r\n  formProfile,\r\n  formRegister,\r\n  formResetPassword,\r\n  ingredients,\r\n  modal,\r\n  order,\r\n  user,\r\n  websocket,\r\n});\r\n\r\n\r\nexport default rootReducer;\r\n","import {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n  WS_SEND_MESSAGE\r\n} from '../constants/action-types';\r\nimport { TWsOrderRecieved } from '../types/data';\r\n\r\n\r\ntype TWsGetMessagePayload = {\r\n  orders: Array<TWsOrderRecieved>;\r\n  total: number;\r\n  totalToday: number;\r\n};\r\n\r\n// Action types\r\nexport type TWsConnectionStart = {\r\n  readonly type: typeof WS_CONNECTION_START;\r\n  readonly payload: string;\r\n}\r\nexport type TWsConnectionSuccess = {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS;\r\n}\r\nexport type TWsConnectionError = {\r\n  readonly type: typeof WS_CONNECTION_ERROR;\r\n  readonly payload: Event | string;\r\n}\r\nexport type TWsConnectionClosed = {\r\n  readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\nexport type TWsGetMessage = {\r\n  readonly type: typeof WS_GET_MESSAGE;\r\n  readonly payload: TWsGetMessagePayload;\r\n}\r\nexport type TWsSendMessage = {\r\n  readonly type: typeof WS_SEND_MESSAGE;\r\n  readonly payload: string;\r\n}\r\n\r\n\r\n// All actions\r\nexport type TWsActions =\r\n  | TWsConnectionStart\r\n  | TWsConnectionSuccess\r\n  | TWsConnectionError\r\n  | TWsConnectionClosed\r\n  | TWsGetMessage\r\n  | TWsSendMessage;\r\n\r\n\r\n// Action creators\r\nexport const wsConnectionStart =\r\n  (url: string): TWsConnectionStart => ({\r\n    type: WS_CONNECTION_START,\r\n    payload: url,\r\n  });\r\n\r\nexport const wsConnectionSuccess =\r\n  (): TWsConnectionSuccess => ({\r\n    type: WS_CONNECTION_SUCCESS,\r\n  });\r\n\r\nexport const wsConnectionError =\r\n  (error: Event | string): TWsConnectionError => ({\r\n    type: WS_CONNECTION_ERROR,\r\n    payload: error,\r\n  });\r\n\r\nexport const wsConnectionClosed =\r\n  (): TWsConnectionClosed => ({\r\n    type: WS_CONNECTION_CLOSED,\r\n  });\r\n\r\nexport const wsGetMessage =\r\n  (payload: TWsGetMessagePayload): TWsGetMessage => ({\r\n    type: WS_GET_MESSAGE,\r\n    payload,\r\n  });\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/root-reducer';\r\nimport { socketMiddleware } from './middlewares/socket-middleware';\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [thunk, socketMiddleware],\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\n\r\nexport default store;\r\n","import { Middleware } from 'redux';\r\nimport {\r\n  WS_CONNECTION_START,\r\n  WS_SEND_MESSAGE\r\n} from '../constants/action-types';\r\nimport {\r\n  wsConnectionSuccess,\r\n  wsConnectionError,\r\n  wsConnectionClosed,\r\n  wsGetMessage\r\n} from '../actions/websocket';\r\n\r\n\r\nexport const socketMiddleware: Middleware = (store) => {\r\n  let socket: WebSocket | null = null;\r\n\r\n  return next => action => {\r\n    const { dispatch } = store;\r\n    const { type, payload } = action;\r\n\r\n    if (type === WS_CONNECTION_START) {\r\n      const wsUrl = action.payload;\r\n      socket = new WebSocket(wsUrl);\r\n    }\r\n\r\n    if (socket) {\r\n      socket.onopen = () => {\r\n        dispatch(wsConnectionSuccess());\r\n      };\r\n\r\n      socket.onerror = event => {\r\n        dispatch(wsConnectionError(event));\r\n      };\r\n\r\n      socket.onmessage = event => {\r\n        const { data } = event;\r\n        const parsedData = JSON.parse(data);\r\n        dispatch(wsGetMessage(parsedData));\r\n      };\r\n\r\n      socket.onclose = () => {\r\n        dispatch(wsConnectionClosed());\r\n      };\r\n\r\n      if (type === WS_SEND_MESSAGE) {\r\n        const message = payload;\r\n        socket.send(JSON.stringify(message));\r\n      }\r\n    }\r\n\r\n    next(action);\r\n  };\r\n};\r\n","import {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook\r\n} from 'react-redux';\r\nimport { AppDispatch, RootState, AppThunk } from './types';\r\n\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n","export function getCookie(name) {\r\n  const matches = document.cookie.match(\r\n    // eslint-disable-next-line\r\n    new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function setCookie(\r\n  name: string,\r\n  value: string | null,\r\n  props?\r\n) {\r\n  props = props || {};\r\n  let exp = props.expires;\r\n  if (typeof exp == 'number' && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n  if (exp && exp.toUTCString) {\r\n    props.expires = exp.toUTCString();\r\n  }\r\n  value = (typeof value === \"string\") ? encodeURIComponent(value) : '';\r\n  let updatedCookie = name + '=' + value;\r\n  for (const propName in props) {\r\n    updatedCookie += '; ' + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += '=' + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n  setCookie(name, null, { expires: -1 });\r\n}\r\n","import { getCookie } from '../utils/cookie';\r\nimport {\r\n  TUserRegisterForm,\r\n  TUserLoginForm,\r\n  TUserPatchForm,\r\n  TUserForgotPasswordForm,\r\n  TUserResetPasswordForm,\r\n  TOrderSendData\r\n} from './types/api';\r\n\r\nexport const baseApi = 'https://norma.nomoreparties.space/api';\r\nexport const wsAllOrdersApi = 'wss://norma.nomoreparties.space/orders/all';\r\nexport const wsUserOrdersApi = 'wss://norma.nomoreparties.space/orders?token=';\r\n\r\n\r\ntype TResponseWithToken = Response & {\r\n  refreshToken: string;\r\n  accessToken: string;\r\n}\r\n\r\nexport const refreshTokenRequest = async () => {\r\n  return await fetch(`${baseApi}/auth/token`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({token: localStorage.getItem('refreshToken')})\r\n  }) as TResponseWithToken;\r\n};\r\n\r\nexport const getIngredientsRequest = async () => {\r\n  return await fetch(`${baseApi}/ingredients`, {\r\n    method: 'GET',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer ' + getCookie('accessToken')\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer'\r\n  });\r\n};\r\n\r\nexport const getUserRequest = async () => {\r\n  return await fetch(`${baseApi}/auth/user`, {\r\n    method: 'GET',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer ' + getCookie('accessToken')\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer'\r\n  })\r\n};\r\n\r\nexport const getOrderRequest = async (\r\n  orderNumber: string | number\r\n) => {\r\n  return await fetch(`https://norma.nomoreparties.space/api/orders/${orderNumber}`, {\r\n    method: 'GET',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer'\r\n  });\r\n};\r\n\r\nexport const registerUserRequest = async (\r\n  form: TUserRegisterForm\r\n) => {\r\n  return await fetch(`${baseApi}/auth/register`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify(form)\r\n  });\r\n};\r\n\r\nexport const loginRequest = async (\r\n  form: TUserLoginForm\r\n) => {\r\n  return await fetch(`${baseApi}/auth/login`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify(form)\r\n  });\r\n};\r\n\r\nexport const patchUserRequest = async (\r\n  form: TUserPatchForm\r\n) => {\r\n  return await fetch(`${baseApi}/auth/user`, {\r\n    method: 'PATCH',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer ' + getCookie('accessToken')\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify(form)\r\n  })\r\n};\r\n\r\nexport const logoutRequest = async () => {\r\n  return await fetch(`${baseApi}/auth/logout`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify({token: localStorage.getItem('refreshToken')})\r\n  });\r\n};\r\n\r\nexport const orderRequest = async (\r\n  orderData: TOrderSendData\r\n) => {\r\n  return await fetch(`${baseApi}/orders`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer ' + getCookie('accessToken')\r\n    },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify(orderData),\r\n  })\r\n};\r\n\r\nexport const forgotPasswordRequest = async (\r\n  form: TUserForgotPasswordForm\r\n) => {\r\n  return await fetch(`${baseApi}/password-reset`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify(form),\r\n  });\r\n};\r\n\r\nexport const resetPasswordRequest = async (\r\n  form: TUserResetPasswordForm\r\n) => {\r\n  return await fetch(`${baseApi}/password-reset/reset`, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n    body: JSON.stringify(form),\r\n  });\r\n};\r\n","import {\r\n  USER_SET_USER,\r\n\r\n  USER_SET_REGISTER_REQUEST,\r\n  USER_SET_REGISTER_SUCCESS,\r\n  USER_SET_REGISTER_FAILURE,\r\n\r\n  USER_SET_LOGIN_REQUEST,\r\n  USER_SET_LOGIN_SUCCESS,\r\n  USER_SET_LOGIN_FAILURE,\r\n\r\n  USER_SET_LOGOUT_REQUEST,\r\n  USER_SET_LOGOUT_SUCCESS,\r\n  USER_SET_LOGOUT_FAILURE,\r\n\r\n  USER_SET_GET_USER_REQUEST,\r\n  USER_SET_GET_USER_SUCCESS,\r\n  USER_SET_GET_USER_FAILURE,\r\n\r\n  USER_SET_PATCH_USER_REQUEST,\r\n  USER_SET_PATCH_USER_SUCCESS,\r\n  USER_SET_PATCH_USER_FAILURE\r\n} from '../constants/action-types';\r\nimport {\r\n  refreshTokenRequest,\r\n  registerUserRequest,\r\n  loginRequest,\r\n  logoutRequest,\r\n  getUserRequest,\r\n  patchUserRequest\r\n} from '../api';\r\nimport {\r\n  setCookie,\r\n  deleteCookie\r\n} from '../../utils/cookie';\r\nimport { AppThunk } from '../types';\r\n\r\n\r\nexport type TUser = null | {\r\n  email: string;\r\n  name: string;\r\n}\r\n\r\n// Action types\r\nexport type TSetUserAction = {\r\n  readonly type: typeof USER_SET_USER;\r\n  readonly payload: TUser;\r\n}\r\nexport type TSetRegisterRequestAction = {\r\n  readonly type: typeof USER_SET_REGISTER_REQUEST;\r\n}\r\nexport type TSetRegisterSuccessAction = {\r\n  readonly type: typeof USER_SET_REGISTER_SUCCESS;\r\n}\r\nexport type TSetRegisterFailureAction = {\r\n  readonly type: typeof USER_SET_REGISTER_FAILURE;\r\n}\r\nexport type TSetLoginRequestAction = {\r\n  readonly type: typeof USER_SET_LOGIN_REQUEST;\r\n}\r\nexport type TSetLoginSuccessAction = {\r\n  readonly type: typeof USER_SET_LOGIN_SUCCESS;\r\n}\r\nexport type TSetLoginFailureAction = {\r\n  readonly type: typeof USER_SET_LOGIN_FAILURE;\r\n}\r\nexport type TSetLogoutRequestAction = {\r\n  readonly type: typeof USER_SET_LOGOUT_REQUEST;\r\n}\r\nexport type TSetLogoutSuccessAction = {\r\n  readonly type: typeof USER_SET_LOGOUT_SUCCESS;\r\n}\r\nexport type TSetLogoutFailureAction = {\r\n  readonly type: typeof USER_SET_LOGOUT_FAILURE;\r\n}\r\nexport type TSetGetUserRequestAction = {\r\n  readonly type: typeof USER_SET_GET_USER_REQUEST;\r\n}\r\nexport type TSetGetUserSuccessAction = {\r\n  readonly type: typeof USER_SET_GET_USER_SUCCESS;\r\n}\r\nexport type TSetGetUserFailureAction = {\r\n  readonly type: typeof USER_SET_GET_USER_FAILURE;\r\n}\r\nexport type TSetPatchUserRequestAction = {\r\n  readonly type: typeof USER_SET_PATCH_USER_REQUEST;\r\n}\r\nexport type TSetPatchUserSuccessAction = {\r\n  readonly type: typeof USER_SET_PATCH_USER_SUCCESS;\r\n}\r\nexport type TSetPatchUserFailureAction = {\r\n  readonly type: typeof USER_SET_PATCH_USER_FAILURE;\r\n}\r\n\r\n\r\n// All types\r\nexport type TUserActions =\r\n  | TSetUserAction\r\n  | TSetRegisterRequestAction\r\n  | TSetRegisterSuccessAction\r\n  | TSetRegisterFailureAction\r\n  | TSetLoginRequestAction\r\n  | TSetLoginSuccessAction\r\n  | TSetLoginFailureAction\r\n  | TSetLogoutRequestAction\r\n  | TSetLogoutSuccessAction\r\n  | TSetLogoutFailureAction\r\n  | TSetGetUserRequestAction\r\n  | TSetGetUserSuccessAction\r\n  | TSetGetUserFailureAction\r\n  | TSetPatchUserRequestAction\r\n  | TSetPatchUserSuccessAction\r\n  | TSetPatchUserFailureAction;\r\n\r\n\r\n// Action creators\r\nexport const setUserAction =\r\n  (user: TUser): TSetUserAction => ({\r\n    type: USER_SET_USER,\r\n    payload: user,\r\n  });\r\n\r\nexport const setRegisterRequestAction =\r\n  (): TSetRegisterRequestAction => ({\r\n    type: USER_SET_REGISTER_REQUEST,\r\n  });\r\n\r\nexport const setRegisterSuccessAction =\r\n  (): TSetRegisterSuccessAction => ({\r\n    type: USER_SET_REGISTER_SUCCESS,\r\n  });\r\n\r\nexport const setRegisterFailureAction =\r\n  (): TSetRegisterFailureAction => ({\r\n    type: USER_SET_REGISTER_FAILURE,\r\n  });\r\n\r\nexport const setLoginRequestAction =\r\n  (): TSetLoginRequestAction => ({\r\n    type: USER_SET_LOGIN_REQUEST,\r\n  });\r\n\r\nexport const setLoginSuccessAction =\r\n  (): TSetLoginSuccessAction => ({\r\n    type: USER_SET_LOGIN_SUCCESS,\r\n  });\r\n\r\nexport const setLoginFailureAction =\r\n  (): TSetLoginFailureAction => ({\r\n    type: USER_SET_LOGIN_FAILURE,\r\n  });\r\n\r\nexport const setLogoutRequestAction =\r\n  (): TSetLogoutRequestAction => ({\r\n    type: USER_SET_LOGOUT_REQUEST,\r\n  });\r\n\r\nexport const setLogoutSuccessAction =\r\n  (): TSetLogoutSuccessAction => ({\r\n    type: USER_SET_LOGOUT_SUCCESS,\r\n  });\r\n\r\nexport const setLogoutFailureAction =\r\n  (): TSetLogoutFailureAction => ({\r\n    type: USER_SET_LOGOUT_FAILURE,\r\n  });\r\n\r\nexport const setGetUserRequestAction =\r\n  (): TSetGetUserRequestAction => ({\r\n    type: USER_SET_GET_USER_REQUEST,\r\n  });\r\n\r\nexport const setGetUserSuccessAction =\r\n  (): TSetGetUserSuccessAction => ({\r\n    type: USER_SET_GET_USER_SUCCESS,\r\n  });\r\n\r\nexport const setGetUserFailureAction =\r\n  (): TSetGetUserFailureAction => ({\r\n    type: USER_SET_GET_USER_FAILURE,\r\n  });\r\n\r\nexport const setPatchUserRequestAction =\r\n  (): TSetPatchUserRequestAction => ({\r\n    type: USER_SET_PATCH_USER_REQUEST,\r\n  });\r\n\r\nexport const setPatchUserSuccessAction =\r\n  (): TSetPatchUserSuccessAction => ({\r\n    type: USER_SET_PATCH_USER_SUCCESS,\r\n  });\r\n\r\nexport const setPatchUserFailureAction =\r\n  (): TSetPatchUserFailureAction => ({\r\n    type: USER_SET_PATCH_USER_FAILURE,\r\n  });\r\n\r\n\r\n// Async actions\r\nexport const refreshToken: AppThunk = (afterRefresh: Function) => async (dispatch: AppThunk) => {\r\n  await refreshTokenRequest()\r\n    .then((res) => {\r\n      localStorage.setItem('refreshToken', res.refreshToken);\r\n      setCookie('accessToken', res.accessToken, null);\r\n      dispatch(afterRefresh);\r\n    })\r\n    .catch(err => { throw err });\r\n};\r\n\r\nexport const registerUser = (form) => async (dispatch) => {\r\n  await registerUserRequest(form)\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    throw new Error('Failed register user request');\r\n  })\r\n  .then(data => {\r\n    if (data.success) {\r\n      const accessToken = data.accessToken.split('Bearer ')[1];\r\n\r\n      dispatch(setUserAction(data.user));\r\n      setCookie('accessToken', accessToken);\r\n      localStorage.setItem('refreshToken', data.refreshToken);\r\n      dispatch(setRegisterSuccessAction());\r\n      return data;\r\n    }\r\n    throw new Error('Unsuccessful login request');\r\n  })\r\n  .catch(err => {\r\n    dispatch(setRegisterFailureAction());\r\n    console.error(err);\r\n  });\r\n}\r\n\r\nexport const loadUserData: AppThunk = () => async (dispatch: AppThunk) => {\r\n  dispatch(setGetUserRequestAction());\r\n\r\n  await getUserRequest()\r\n    .then((res) => {\r\n      if (!res.ok && !(res.status === 403)) {\r\n        throw new Error('Failed get user request');\r\n      };\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      if (!data.success) throw data;\r\n      dispatch(setUserAction(data.user));\r\n      dispatch(setGetUserSuccessAction());\r\n    })\r\n    .catch((err) => {\r\n      if (err.message === 'jwt expired') {\r\n        dispatch(refreshToken(loadUserData()));\r\n      } else {\r\n        dispatch(setUserAction(null));\r\n        dispatch(setGetUserFailureAction());\r\n        console.error(err);\r\n      }\r\n    });\r\n};\r\n\r\nexport const patchUserData: AppThunk = (form) => async (dispatch: AppThunk) => {\r\n  dispatch(setPatchUserRequestAction());\r\n\r\n  await patchUserRequest(form)\r\n    .then(res => {\r\n      if (!res.ok && !(res.status === 403)) {\r\n        throw new Error('Failed get user request');\r\n      };\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      if (!data.success) throw data;\r\n\r\n      dispatch(setUserAction(data.user));\r\n      dispatch(setPatchUserSuccessAction());\r\n      return data;\r\n    })\r\n    .catch(err => {\r\n      if (err.message === 'jwt expired') {\r\n        dispatch(refreshToken(patchUserData(form)));\r\n      } else {\r\n        dispatch(setPatchUserFailureAction());\r\n        console.error(err);\r\n      }\r\n    });\r\n};\r\n\r\nexport const loginUser: AppThunk = (form) => async (dispatch: AppThunk) => {\r\n  dispatch(setLoginRequestAction());\r\n\r\n  await loginRequest(form)\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      throw new Error('Failed login request');\r\n    })\r\n    .then(data => {\r\n      if (data.success) {\r\n        const accessToken = data.accessToken.split('Bearer ')[1];\r\n\r\n        dispatch(setUserAction(data.user));\r\n        setCookie('accessToken', accessToken);\r\n        localStorage.setItem('refreshToken', data.refreshToken);\r\n        dispatch(setLoginSuccessAction());\r\n        return data;\r\n      }\r\n      throw new Error('Unsuccessful login request');\r\n    })\r\n    .catch(err => {\r\n      dispatch(setLoginFailureAction());\r\n      console.error(err);\r\n    });\r\n};\r\n\r\nexport const logoutUser: AppThunk = () => async (dispatch) => {\r\n  dispatch(setLogoutRequestAction());\r\n\r\n  await logoutRequest()\r\n    .then(res => {\r\n      if (res.ok) {\r\n        dispatch(setUserAction(null));\r\n        deleteCookie('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n        dispatch(setLogoutSuccessAction());\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(setLogoutFailureAction());\r\n      console.error(err);\r\n    });\r\n};\r\n","import { TRawIngredient, TIngredient } from '../services/types/data';\r\n\r\n\r\nconst adaptIngredients =\r\n  (ingredients: Array<TRawIngredient>): Array<TIngredient> => {\r\n    if (ingredients.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    return ingredients.map(item => (\r\n      {\r\n        id: item._id,\r\n        name: item.name,\r\n        type: item.type,\r\n        proteins: item.proteins,\r\n        fat: item.fat,\r\n        carbohydrates: item.carbohydrates,\r\n        calories: item.calories,\r\n        price: item.price,\r\n        image: item.image,\r\n        imageMobile: item.image_mobile,\r\n        imageLarge: item.image_large,\r\n        count: 0,\r\n        __v: item.__v,\r\n      }\r\n    ));\r\n  };\r\n\r\n\r\nexport { adaptIngredients };\r\n","import {\r\n  INGREDIETNS_REQUEST,\r\n  INGREDIETNS_SUCCESS,\r\n  INGREDIETNS_FAILURE,\r\n  INGREDIETNS_INCREASE_INGREDIENT_COUNT,\r\n  INGREDIETNS_DECREASE_INGREDIENT_COUNT,\r\n  INGREDIETNS_RESET_INGREDIENTS_COUNTER\r\n} from '../constants/action-types';\r\nimport { TIngredient } from '../types/data';\r\nimport { getIngredientsRequest } from '../api';\r\nimport { adaptIngredients } from '../../utils/adapter';\r\nimport { AppThunk } from '../types';\r\n\r\n\r\ntype TIncreaseCountData = { id: string; type: string; };\r\ntype TDecreaseCountData = string;\r\n\r\n// Action types\r\nexport type TRequestAction = {\r\n  readonly type: typeof INGREDIETNS_REQUEST;\r\n}\r\nexport type TSuccessAction = {\r\n  readonly type: typeof INGREDIETNS_SUCCESS;\r\n  readonly payload: Array<TIngredient>;\r\n}\r\nexport type TFailureAction = {\r\n  readonly type: typeof INGREDIETNS_FAILURE;\r\n}\r\nexport type TIncreaseIngredientCountAction = {\r\n  readonly type: typeof INGREDIETNS_INCREASE_INGREDIENT_COUNT;\r\n  readonly payload: TIncreaseCountData;\r\n}\r\nexport type TDecreaseIngredientCountAction = {\r\n  readonly type: typeof INGREDIETNS_DECREASE_INGREDIENT_COUNT;\r\n  readonly payload: TDecreaseCountData;\r\n}\r\nexport type TResetIngredientsCounterAction = {\r\n  readonly type: typeof INGREDIETNS_RESET_INGREDIENTS_COUNTER;\r\n}\r\n\r\n\r\n// All actions\r\nexport type TIngredientActions =\r\n  | TRequestAction\r\n  | TSuccessAction\r\n  | TFailureAction\r\n  | TIncreaseIngredientCountAction\r\n  | TDecreaseIngredientCountAction\r\n  | TResetIngredientsCounterAction;\r\n\r\n\r\n// Action creators\r\nexport const requestAction =\r\n  (): TRequestAction => ({\r\n    type: INGREDIETNS_REQUEST,\r\n  });\r\n\r\nexport const successAction =\r\n  (ingredients: Array<TIngredient>): TSuccessAction => ({\r\n    type: INGREDIETNS_SUCCESS,\r\n    payload: ingredients,\r\n  });\r\n\r\nexport const failureAction =\r\n  (): TFailureAction => ({\r\n    type: INGREDIETNS_FAILURE,\r\n  });\r\n\r\nexport const increaseIngredientCountAction =\r\n  (payload: TIncreaseCountData): TIncreaseIngredientCountAction => ({\r\n    type: INGREDIETNS_INCREASE_INGREDIENT_COUNT,\r\n    payload,\r\n  });\r\n\r\nexport const decreaseIngredientCountAction =\r\n  (payload: TDecreaseCountData): TDecreaseIngredientCountAction => ({\r\n    type: INGREDIETNS_DECREASE_INGREDIENT_COUNT,\r\n    payload,\r\n  });\r\n\r\nexport const resetIngredientsCounterAction =\r\n  (): TResetIngredientsCounterAction => ({\r\n    type: INGREDIETNS_RESET_INGREDIENTS_COUNTER,\r\n  });\r\n\r\n\r\n// Async actions\r\nexport const getIngredientsAction: AppThunk = () => async (dispatch) => {\r\n  await getIngredientsRequest()\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      throw new Error(`Responsed with status ${response.status}`);\r\n    })\r\n    .then(dataContainer => {\r\n      if (dataContainer.success) {\r\n        const ingredients = adaptIngredients(dataContainer.data);\r\n        dispatch(successAction(ingredients));\r\n      } else {\r\n        throw new Error(`Get data finished with no success`);\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.error('Error:', err);\r\n    })\r\n};\r\n","import { ElementType } from 'react';\r\nimport {\r\n  MODAL_OPEN_MODAL,\r\n  MODAL_CLOSE_MODAL\r\n} from '../constants/action-types';\r\n\r\n\r\ntype TModalChild = ElementType | null;\r\n\r\n// Action types\r\nexport type TOpenModalAction = {\r\n  readonly type: typeof MODAL_OPEN_MODAL;\r\n  readonly payload: TModalChild;\r\n}\r\nexport type TCloseModalAction = {\r\n  readonly type: typeof MODAL_CLOSE_MODAL;\r\n}\r\n\r\n\r\n// All types\r\nexport type ModalActions =\r\n  | TOpenModalAction\r\n  | TCloseModalAction;\r\n\r\n\r\n// Action creators\r\nexport const openModalAction =\r\n  (payload: TModalChild): TOpenModalAction => ({\r\n    type: MODAL_OPEN_MODAL,\r\n    payload,\r\n  });\r\n\r\nexport const closeModalAction =\r\n  (): TCloseModalAction => ({\r\n    type: MODAL_CLOSE_MODAL,\r\n  });\r\n","import React, { FC } from 'react';\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\n\r\nconst ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\r\n  const { user } = useSelector((store) => store.user);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        user\r\n         ? ( children )\r\n         : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default ProtectedRoute;\r\n","import React, { FC } from 'react';\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\n\r\nconst GuestRoute: FC<RouteProps> = ({ children, ...rest }) => {\r\n  const { user } = useSelector((store) => store.user);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() =>\r\n        !user ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to='/'\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default GuestRoute;\r\n","import { TIngredient, TCardIngredient } from '../services/types/data';\r\n\r\n\r\nexport const countUniqueItems =\r\n  ( itemsArr: Array<string> ): { [key: string]: number } => {\r\n    return itemsArr.reduce(\r\n      (acc, id) => {\r\n        if (!id || id === '' || id === 'null') {\r\n          return acc;\r\n        }\r\n\r\n        const key = id.toString();\r\n        acc[key] = acc[key] ? acc[key] + 1 : 1;\r\n        return acc;\r\n      }, {})\r\n  };\r\n\r\n\r\nexport const getIngredientsData = (\r\n  idList: Array<string>,\r\n  ingredientsDatabase: Array<TIngredient>\r\n): Array<TCardIngredient> => {\r\n  let ingredientsToShow: Array<TCardIngredient> = [];\r\n\r\n  if (!idList\r\n    || !ingredientsDatabase\r\n    || !idList.length\r\n    || !ingredientsDatabase.length) {\r\n    return ingredientsToShow;\r\n  }\r\n\r\n  const uniqueIdsWithCount = countUniqueItems(idList);\r\n\r\n  for (const [ id, count ] of Object.entries(uniqueIdsWithCount)) {\r\n    if(!id) {\r\n      continue;\r\n    }\r\n\r\n    const ingredientData = ingredientsDatabase.find(\r\n      (ingredient) => ingredient.id === id\r\n    );\r\n\r\n    if (!ingredientData) {\r\n      console.error(`Cant't find ingredient with id \"${id}\" on local database`);\r\n      continue;\r\n    }\r\n\r\n    const data = {\r\n      count,\r\n      price: ingredientData?.price,\r\n      img: ingredientData?.imageMobile,\r\n      name: ingredientData?.name,\r\n    }\r\n\r\n    if (ingredientData?.type === 'bun') {\r\n      ingredientsToShow.unshift(data);\r\n    } else {\r\n      ingredientsToShow.push(data);\r\n    }\r\n  }\r\n\r\n  return ingredientsToShow;\r\n};\r\n","import moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport const formatDate = (dateString: string): string => {\r\n  moment.locale('ru');\r\n  const timezone = 'i-GMT+3'\r\n\r\n  return `${moment(dateString).calendar()} ${timezone}`;\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport styles from './preview-item.module.css';\r\n\r\n\r\ntype TPreviewItemProps = {\r\n  key?: string;\r\n  img?: string;\r\n  name?: string;\r\n  count?: number;\r\n  leftItems?: number;\r\n}\r\n\r\n\r\nconst PreviewItem: FC<TPreviewItemProps> = ({\r\n  img,\r\n  name,\r\n  count,\r\n  leftItems = null\r\n}) => {\r\n  if (leftItems) {\r\n    return (\r\n      <li className={`${styles.item_last}`}>\r\n        <p className={`${styles.more} text text_type_main-default text_color_inactive`}>\r\n          {`...${leftItems}`}\r\n        </p>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <li className={`${styles.item}`}>\r\n      <img\r\n        className={`${styles.image}`}\r\n        src={img}\r\n        alt={name}\r\n      />\r\n\r\n      { count && count > 1\r\n        ? (\r\n          <span\r\n            className={`${styles.count} text text_type_main-default`}\r\n          >\r\n            { `+${count}` }\r\n          </span>\r\n        )\r\n        : null\r\n      }\r\n    </li>\r\n  );\r\n};\r\n\r\n\r\nexport default PreviewItem;\r\n","import React, { useMemo, FC } from 'react';\r\n\r\nimport { getIngredientsData } from '../../utils/utils';\r\nimport { formatDate } from '../../utils/dates';\r\n\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport PreviewItem from '../preview-item/preview-item';\r\n\r\nimport {\r\n  TWsOrderRecieved,\r\n  TIngredient\r\n} from '../../services/types/data';\r\n\r\nimport styles from './orders-feed.module.css';\r\n\r\n\r\ntype TFeedCardProps = {\r\n  orderInfo: TWsOrderRecieved;\r\n  ingredientsList: Array<TIngredient>;\r\n}\r\n\r\nconst MAX_INGREDIENTS_PREVIEW: number = 6;\r\n\r\n\r\nconst FeedCard: FC<TFeedCardProps> = ({\r\n  orderInfo,\r\n  ingredientsList\r\n}) => {\r\n  const {\r\n    ingredients,\r\n    name,\r\n    createdAt,\r\n    number\r\n  } = orderInfo;\r\n  const orderDate = formatDate(createdAt);\r\n\r\n  const ingredientsData = useMemo(\r\n    () => getIngredientsData(ingredients, ingredientsList),\r\n    [ingredients, ingredientsList]\r\n  );\r\n\r\n  const totalPrice = useMemo(\r\n    () => ingredientsData.reduce((acc, item) => acc + item.price * item.count, 0),\r\n    [ingredientsData]\r\n  );\r\n\r\n  const ingredientsToPreview = useMemo(\r\n    () => ingredientsData.length > MAX_INGREDIENTS_PREVIEW\r\n      ? ingredientsData.slice(0, MAX_INGREDIENTS_PREVIEW)\r\n      : ingredientsData\r\n  , [ingredientsData]);\r\n\r\n  const leftItems = useMemo(() => {\r\n    return (ingredientsData.length > MAX_INGREDIENTS_PREVIEW)\r\n     ? ingredientsData.length - MAX_INGREDIENTS_PREVIEW\r\n     : 0;\r\n  }, [ingredientsData]);\r\n\r\n  return (\r\n    <div className={`${styles.card} p-6`}>\r\n      <div className={`${styles.card_header} mb-6`}>\r\n        <p className={`text text_type_digits-default`}>\r\n          {`#${String(number).padStart(6, '0')}`}\r\n        </p>\r\n        <p className={`text text_type_main-default text_color_inactive`}>\r\n          { orderDate }\r\n        </p>\r\n      </div>\r\n\r\n      <h3 className={`text text_type_main-medium mb-6`}>\r\n        { name }\r\n      </h3>\r\n\r\n      <div className={`${styles.card_footer}`}>\r\n        <ul className={`${styles.card_ingredientsPreview}`}>\r\n          { ingredientsToPreview.map(\r\n              ({ img, name, count}) => (\r\n                <PreviewItem\r\n                  key={name}\r\n                  img={img}\r\n                  name={img}\r\n                  count={count}\r\n                />\r\n              )\r\n            )\r\n          }\r\n          { leftItems\r\n            ? <PreviewItem key={'lastInfo'} leftItems={leftItems} />\r\n            : null\r\n          }\r\n        </ul>\r\n\r\n        <p className={`${styles.card_totalPrice} text text_type_digits-default`}>\r\n          { totalPrice }\r\n          <i className={`${styles.card_totalPriceIcon} ml-2`}>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </i>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default FeedCard;\r\n","import React, { FC } from 'react';\r\nimport styles from './loader.module.css';\r\n\r\n\r\nconst Loader: FC<{}> = () => {\r\n  return (\r\n    <div className={`${styles.ldsEllipsis}`}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Loader;\r\n","import React, { FC } from 'react';\r\nimport styles from './order-status.module.css';\r\n\r\nimport { TOrderStatus } from '../../services/types/data';\r\n\r\n\r\ntype TOrderStatusProps = {\r\n  status: TOrderStatus;\r\n}\r\n\r\n\r\nconst getStatusText = (status: TOrderStatus): string => {\r\n  switch (status) {\r\n    case 'done':\r\n      return 'Выполнен';\r\n\r\n    case 'created':\r\n      return 'Создан';\r\n\r\n    case 'pending':\r\n      return 'Готовится';\r\n\r\n    case 'canceled':\r\n      return 'Отменён'\r\n\r\n    default:\r\n      return 'Не определён';\r\n  }\r\n};\r\n\r\n\r\nconst OrderStatus: FC<TOrderStatusProps> = ({ status }) => {\r\n  return (\r\n    <span className={`${styles.default} ${styles[status]}`}>\r\n      { getStatusText(status) }\r\n    </span>\r\n  );\r\n};\r\n\r\n\r\nexport default OrderStatus;\r\n","import React, { useMemo, FC } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { formatDate } from '../../utils/dates';\r\nimport { getIngredientsData } from '../../utils/utils';\r\n\r\nimport Loader from '../loader/loader';\r\nimport OrderStatus from '../order-status/order-status';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport {\r\n  TWsOrderRecieved\r\n} from '../../services/types/data';\r\n\r\nimport styles from './order-info.module.css';\r\n\r\n\r\nconst getOrderDataFromOrders = (orderNumber: string, ordersList: Array<TWsOrderRecieved>) => {\r\n  return ordersList.find(\r\n    (order) => {\r\n      const number: string = order.number === 'string'\r\n        ? order.number\r\n        : `${order.number}`;\r\n\r\n        return parseInt(number, 10) === parseInt(orderNumber, 10)\r\n    }\r\n  );\r\n};\r\n\r\nconst generateIngredientElement = ({\r\n  img,\r\n  name,\r\n  count,\r\n  price\r\n}) => {\r\n  return (\r\n    <li className={`${styles.ingredient} text text_type_main-default`} key={name}>\r\n      <div className={`${styles.ingredientPreview} mr-4`}>\r\n        <img className={`mr-4`} src={img} alt={name} />\r\n      </div>\r\n      <p className={`${styles.ingredientName} mr-4`}>\r\n        { name }\r\n      </p>\r\n      <p className={`${styles.ingredientPrice} text_type_digits-default`}>\r\n        { `${count} x ${price}` }\r\n        <i className={`ml-2`}>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </i>\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n\r\n\r\nconst OrderInfo: FC<{}> = () => {\r\n  const { items: ingredientsDatabase } = useSelector((store) => store.ingredients);\r\n  const { orders } = useSelector((store) => store.websocket);\r\n  const { orderNumber } = useParams() as { [key: string]: string };\r\n\r\n  const order = useMemo(\r\n    () => getOrderDataFromOrders(orderNumber, orders),\r\n    [orderNumber, orders]\r\n  );\r\n\r\n  const ingredientsData = useMemo(\r\n    () => {\r\n      if (!order) return [];\r\n      return getIngredientsData(order.ingredients, ingredientsDatabase)\r\n    },\r\n    [order, ingredientsDatabase]\r\n  );\r\n\r\n  const totalPrice = useMemo(\r\n    () => ingredientsData.reduce((acc, item) => acc + item.price * item.count, 0),\r\n    [ingredientsData]\r\n  );\r\n\r\n  if (!order) {\r\n    return (\r\n      <div className={`${styles.loaderContainer} pt-30`}>\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const { name, number, status, createdAt } = order;\r\n  const orderNumberToShow = `#${String(number).padStart(6, '0')}`;\r\n  const dateToShow = formatDate(createdAt);\r\n\r\n  return (\r\n    <div className={`${styles.pageContainer} text text_type_main-default pt-15 pb-10`}>\r\n      <h1 className={`visualliHidden`}>\r\n        Информация о заказе\r\n      </h1>\r\n\r\n      <h2 className={`${styles.orderNumber} text text_type_digits-default mb-10`}>\r\n        { orderNumberToShow }\r\n      </h2>\r\n\r\n      <p className={`${styles.orderName} text text_type_main-medium mb-3`}>\r\n        { name }\r\n      </p>\r\n\r\n      <p className={`${styles.orderStatus} mb-15`}>\r\n        <OrderStatus status={status} />\r\n      </p>\r\n\r\n      <h3 className={`${styles.orderComposition} text text_type_main-medium mb-6`}>\r\n        Состав:\r\n      </h3>\r\n\r\n      <ul className={`${styles.ingredientsList} scroller pr-6 mb-10`}>\r\n        { ingredientsData.map(\r\n          (data) => generateIngredientElement(data)\r\n        ) }\r\n      </ul>\r\n\r\n      <div className={`${styles.orderColumns}`}>\r\n        <p className={`${styles.orderDate} text_type_main-default text_color_inactive`}>\r\n          { dateToShow }\r\n        </p>\r\n\r\n        <p className={`${styles.orderTotalPrice} text_type_digits-default`}>\r\n          { totalPrice }\r\n          <i className={`ml-2`}>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </i>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default OrderInfo;\r\n","import React, { FC } from \"react\";\r\nimport { Link, useRouteMatch, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { openModalAction } from '../../services/actions/modal';\r\n\r\nimport FeedCard from \"./feed-card\";\r\nimport OrderInfo from \"../order-info/order-info\";\r\n\r\nimport {\r\n  TWsOrderRecieved,\r\n  TIngredient\r\n} from '../../services/types/data';\r\n\r\nimport styles from './orders-feed.module.css';\r\n\r\n\r\ntype TOrdersFeedProps = {\r\n  orders: Array<TWsOrderRecieved>;\r\n  ingredientsList: Array<TIngredient>;\r\n}\r\n\r\nconst OrdersFeed: FC<TOrdersFeedProps> = ({ orders, ingredientsList }) => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const { url } = useRouteMatch();\r\n\r\n  if (!orders.length) {\r\n    return (\r\n      <p className={`text text_type_main-medium`}>\r\n        Здесь пока ещё пусто\r\n      </p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ul className={`${styles.list} scroller`}>\r\n      { orders.map((orderInfo) => (\r\n        <li key={orderInfo._id}>\r\n          <Link\r\n            className={`${styles.list_link}`}\r\n            to={{\r\n              pathname: `${url}/${orderInfo.number}`,\r\n              state: { background: location}\r\n            }}\r\n            onClick={() => {\r\n              dispatch(openModalAction(OrderInfo));\r\n            }}\r\n          >\r\n            <FeedCard\r\n              orderInfo={orderInfo}\r\n              ingredientsList={ingredientsList}\r\n            />\r\n          </Link>\r\n        </li>\r\n      ))\r\n\r\n      }\r\n    </ul>\r\n  );\r\n\r\n};\r\n\r\n\r\nexport default OrdersFeed;\r\n\r\n","import React, { useMemo, FC } from 'react';\r\n\r\nimport {\r\n  TWsOrderRecieved,\r\n  TOrderStatus\r\n} from '../../services/types/data';\r\n\r\nimport styles from './orders-summary.module.css';\r\n\r\n\r\ntype TOrdersSummaryProps = {\r\n  orders: Array<TWsOrderRecieved>;\r\n  total: number;\r\n  totalToday: number;\r\n}\r\n\r\n\r\nconst MAX_ORDERS_TO_SHOW: number = 5;\r\nconst getLastordersByStatus = (\r\n  orders: Array<TWsOrderRecieved>,\r\n  status: TOrderStatus,\r\n  count: number\r\n) => {\r\n  const filteredOrders = orders.filter((order) => order.status === status);\r\n  return filteredOrders.slice(0, count);\r\n};\r\n\r\n\r\nconst OrdersSummary: FC<TOrdersSummaryProps> = ({orders, total, totalToday}) => {\r\n  const doneOrders = useMemo(\r\n    () => getLastordersByStatus(orders, 'done', MAX_ORDERS_TO_SHOW),\r\n    [orders]\r\n  );\r\n  const inProgressOrders = useMemo(\r\n    () => getLastordersByStatus(orders, 'pending', MAX_ORDERS_TO_SHOW),\r\n    [orders]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className={`${styles.ordersStatusContainer} mb-15`}>\r\n        <div className={`${styles.ordersStatusColumn} mr-6`}>\r\n          <h3\r\n            className={`${styles.orderStatusTitle} text text_type_main-medium mb-6`}\r\n          >\r\n            Готовы:\r\n          </h3>\r\n          <ul className={`${styles.ordersList}`}>\r\n            { doneOrders.map((order) => {\r\n              const orderIdToShow = String(order.number).padStart(6, '0');\r\n\r\n              return (\r\n                <li className={`mb-2`} key={order.number}>\r\n                  <p className={`${styles.orderId} ${styles.orderId_done} text text_type_digits-default`}>\r\n                    { orderIdToShow }\r\n                  </p>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className={`${styles.ordersStatusColumn}`}>\r\n          <h3\r\n            className={`${styles.orderStatusTitle} text text_type_main-medium mb-6`}\r\n          >\r\n            В работе:\r\n          </h3>\r\n          <ul className={`${styles.ordersList}`}>\r\n            { inProgressOrders.map((order) => {\r\n              const orderIdToShow = String(order.number).padStart(6, '0');\r\n\r\n              return (\r\n                <li className={`mb-2`} key={order.number}>\r\n                  <p className={`${styles.orderId} text text_type_digits-default`}>\r\n                    { orderIdToShow }\r\n                  </p>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <h3 className={`text text_type_main-medium`}>\r\n        Выполнено за все время:\r\n      </h3>\r\n      <p className={`text text_type_digits-large text-with-glow mb-15`}>\r\n        { total }\r\n      </p>\r\n\r\n      <h3 className={`text text_type_main-medium`}>\r\n        Выполнено за сегодня:\r\n      </h3>\r\n      <p className={`text text_type_digits-large text-with-glow`}>\r\n        { totalToday }\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default OrdersSummary;\r\n","import React, { useEffect, FC } from 'react';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\n\r\nimport {\r\n  wsConnectionStart,\r\n  wsConnectionClosed\r\n} from '../services/actions/websocket';\r\nimport { wsAllOrdersApi } from '../services/api';\r\n\r\nimport OrdersFeed from '../components/orders-feed/orders-feed';\r\nimport OrdersSummary from '../components/orders-summary/orders-summary';\r\nimport Loader from '../components/loader/loader';\r\n\r\nimport layoutStyles from './page-layout.module.css';\r\n\r\n\r\nexport const FeedPage: FC<{}> = () => {\r\n  const dispatch = useDispatch();\r\n  const { items: ingredients } = useSelector((store) => store.ingredients);\r\n  const { orders, total, totalToday } = useSelector((store) => store.websocket);\r\n\r\n  useEffect(() => {\r\n    dispatch(wsConnectionStart(wsAllOrdersApi));\r\n    return () => {\r\n      dispatch(wsConnectionClosed());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  if (!ingredients.length || !orders.length) {\r\n    return (\r\n      <section className={`pt-30`}>\r\n        <h1 className={`text text_type_main-large mb-30`}>\r\n          Лента заказов\r\n        </h1>\r\n        <div className={`${layoutStyles.loaderContainer}`}>\r\n          <Loader />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className={`pt-10`}>\r\n      <h1 className={`text text_type_main-large mb-4`}>\r\n        Лента заказов\r\n      </h1>\r\n\r\n      <div className={`columnsContainer`}>\r\n        <section className={`column mr-10`}>\r\n          <h2 className={`visualliHidden`}>\r\n            Последние заказы\r\n          </h2>\r\n          <OrdersFeed orders={orders} ingredientsList={ingredients} />\r\n        </section>\r\n\r\n        <section className={`column`}>\r\n          <h2 className={`visualliHidden`}>\r\n            Сводная информация\r\n          </h2>\r\n          <OrdersSummary\r\n            orders={orders}\r\n            total={total}\r\n            totalToday={totalToday}\r\n          />\r\n        </section>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import {\r\n  FORM_FORGOT_PASSWORD_SET_VALUE,\r\n  FORM_FORGOT_PASSWORD_SET_VERIFIED_EMAIL,\r\n  FORM_FORGOT_PASSWORD_CLEAR_FORM,\r\n  FORM_FORGOT_PASSWORD_REQUEST,\r\n  FORM_FORGOT_PASSWORD_SUCCESS,\r\n  FORM_FORGOT_PASSWORD_FAILURE,\r\n} from '../constants/action-types';\r\nimport { forgotPasswordRequest } from '../api';\r\nimport { AppThunk } from '../types';\r\n\r\n\r\ntype TFormSetData = { name: string; value: string; }\r\n\r\n// Action types\r\nexport type TSetValueAction = {\r\n  readonly type: typeof FORM_FORGOT_PASSWORD_SET_VALUE;\r\n  readonly payload: TFormSetData;\r\n}\r\nexport type TSetVerifiedEmailAction = {\r\n  readonly type: typeof FORM_FORGOT_PASSWORD_SET_VERIFIED_EMAIL;\r\n  readonly payload: string | null;\r\n}\r\nexport type TClearFormAction = {\r\n  readonly type: typeof FORM_FORGOT_PASSWORD_CLEAR_FORM;\r\n}\r\nexport type TRequestAction = {\r\n  readonly type: typeof FORM_FORGOT_PASSWORD_REQUEST;\r\n}\r\nexport type TSuccessAction = {\r\n  readonly type: typeof FORM_FORGOT_PASSWORD_SUCCESS;\r\n}\r\nexport type TFailureAction = {\r\n  readonly type: typeof FORM_FORGOT_PASSWORD_FAILURE;\r\n}\r\n\r\n\r\n// All types\r\nexport type TFormForgotPasswordActions =\r\n  | TSetValueAction\r\n  | TSetVerifiedEmailAction\r\n  | TClearFormAction\r\n  | TRequestAction\r\n  | TSuccessAction\r\n  | TFailureAction;\r\n\r\n\r\n// Action creators\r\nexport const setValueAction =\r\n  (payload: TFormSetData): TSetValueAction => ({\r\n    type: FORM_FORGOT_PASSWORD_SET_VALUE,\r\n    payload,\r\n  });\r\n\r\nexport const setVerifiedEmailAction =\r\n  (verifiedEmail: string | null): TSetVerifiedEmailAction => ({\r\n    type: FORM_FORGOT_PASSWORD_SET_VERIFIED_EMAIL,\r\n    payload: verifiedEmail,\r\n  });\r\n\r\nexport const clearFormAction =\r\n  (): TClearFormAction => ({\r\n    type: FORM_FORGOT_PASSWORD_CLEAR_FORM,\r\n  });\r\n\r\nexport const requestAction =\r\n  (): TRequestAction => ({\r\n    type: FORM_FORGOT_PASSWORD_REQUEST,\r\n  });\r\n\r\nexport const successAction =\r\n  (): TSuccessAction => ({\r\n    type: FORM_FORGOT_PASSWORD_SUCCESS,\r\n  });\r\n\r\n  export const failureAction =\r\n  (): TFailureAction => ({\r\n    type: FORM_FORGOT_PASSWORD_FAILURE,\r\n  });\r\n\r\n\r\n// Async actions\r\nexport const verifyEmailAction: AppThunk = () => async (dispatch, getState) => {\r\n  const formData = getState().formForgotPassword.form;\r\n\r\n  dispatch(requestAction());\r\n  dispatch(setVerifiedEmailAction(null));\r\n\r\n  await forgotPasswordRequest(formData)\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      throw new Error('Failed verify email request');\r\n    })\r\n    .then(data => {\r\n      if (data.success) {\r\n        dispatch(successAction());\r\n        dispatch(setVerifiedEmailAction(formData.email));\r\n      } else {\r\n        throw new Error('Unsuccessful verify email request');\r\n      }\r\n      return data;\r\n    })\r\n    .catch(err => {\r\n      dispatch(failureAction());\r\n      console.error(err);\r\n    });\r\n};\r\n","// eslint-disable-next-line\r\nexport const regExpEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n","import React, { useState, useEffect, useCallback, FC } from 'react';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport {\r\n  setValueAction,\r\n  clearFormAction,\r\n  verifyEmailAction\r\n} from '../services/actions/form-forgot-password';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Loader from '../components/loader/loader';\r\n\r\nimport { regExpEmail } from '../utils/regexp';\r\n\r\nimport styles from './page-layout.module.css';\r\n\r\n\r\nexport const ForgotPasswordPage: FC<{}> = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const {\r\n    form,\r\n    VERIFY_EMAIL_SUCCESS,\r\n    VERIFY_EMAIL_REQUEST,\r\n    verifiedEmail\r\n  } = useSelector((store) => store.formForgotPassword);\r\n  const [isFormValid, setIsFormValid] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (VERIFY_EMAIL_SUCCESS && verifiedEmail) {\r\n      history.replace({\r\n        pathname: '/reset-password'\r\n      });\r\n      dispatch(clearFormAction());\r\n    }\r\n  }, [history, dispatch, VERIFY_EMAIL_SUCCESS, verifiedEmail]);\r\n\r\n  const onInputChange = useCallback((evt) => {\r\n    setIsFormValid(regExpEmail.test(evt.target.value));\r\n\r\n    dispatch(setValueAction({\r\n      name: evt.target.name,\r\n      value: evt.target.value,\r\n    }));\r\n  }, [dispatch, setIsFormValid]);\r\n\r\n  const handleSubmit = useCallback((evt) => {\r\n    evt.preventDefault();\r\n    if (isFormValid && form.email !== '') {\r\n      dispatch(verifyEmailAction());\r\n    }\r\n  }, [dispatch, isFormValid, form]);\r\n\r\n\r\n  return (\r\n    <section className={`${styles.formContainer} pt-30`}>\r\n      <h1 className={`text text_type_main-medium mb-6`}>\r\n        Восстановление пароля\r\n      </h1>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={`${styles.inputWrapper} mb-6`}>\r\n          <Input\r\n            type={'email'}\r\n            placeholder={'Укажите e-mail'}\r\n            onChange={onInputChange}\r\n            value={form.email}\r\n            name={'email'}\r\n            error={!isFormValid}\r\n            errorText={'Некорректный email'}\r\n            size={'default'}\r\n          />\r\n        </div>\r\n\r\n        <div className={'mb-20'}>\r\n          { VERIFY_EMAIL_REQUEST\r\n            ? (\r\n              <Loader />\r\n            ) : (\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"medium\"\r\n              >\r\n                Восстановить\r\n              </Button>)\r\n          }\r\n        </div>\r\n      </form>\r\n\r\n      <p className={'text text_type_main-default text_color_inactive'}>\r\n        Вспомнили пароль? <Link to='/login' className={styles.link}>Войти</Link>\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useMemo, FC } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getIngredientsAction } from '../../services/actions/ingredients';\r\n\r\nimport Loader from '../loader/loader';\r\n\r\nimport styles from './ingredient-details.module.css';\r\n\r\n\r\nconst IngredientDetails: FC<{}> = () => {\r\n  const dispatch = useDispatch();\r\n  const { items: ingredients } = useSelector((store) => store.ingredients);\r\n\r\n  const { id } = useParams() as any;\r\n\r\n  const ingredient = useMemo(\r\n    () => ingredients.find(item => item.id === id),\r\n    [ingredients, id]);\r\n\r\n  if (!ingredients.length) {\r\n    dispatch(getIngredientsAction());\r\n    return (\r\n      <div className={`${styles.loaderContainer}`}>\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!ingredient) {\r\n    return (\r\n      <>\r\n        <h2 className={`text text_type_main-large mb-20`}>\r\n          Ошибка!\r\n        </h2>\r\n\r\n        <p className={`text text_type_main-medium`}>\r\n          Невозможно получить информацию об ингредиенте.\r\n        </p>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className={`${styles.title} text text_type_main-large mt-10`}>Детали ингредиента</h2>\r\n      <img\r\n        className='mb-4'\r\n        src={ingredient.imageLarge}\r\n        alt={ingredient.name}\r\n        width='480'\r\n        height='240'\r\n      />\r\n      <h3\r\n        className={`${styles.ingredientName} text_type_main-medium mb-8`}\r\n      >\r\n        { ingredient.name }\r\n      </h3>\r\n      <dl className={`${styles.composition} text_type_main-default text_color_inactive mb-15`}>\r\n        <div className={styles.compositionItem}>\r\n          <dt className='mb-2'>Калории,ккал</dt>\r\n          <dd\r\n            className={'text_type_digits-default'}\r\n          >\r\n            { ingredient.calories }\r\n          </dd>\r\n        </div>\r\n        <div className={styles.compositionItem}>\r\n          <dt className='mb-2'>Белки, г</dt>\r\n          <dd\r\n            className={'text_type_digits-default'}\r\n          >\r\n            { ingredient.proteins }\r\n          </dd>\r\n        </div>\r\n        <div className={styles.compositionItem}>\r\n          <dt className='mb-2'>Жиры, г</dt>\r\n          <dd\r\n            className={'text_type_digits-default'}\r\n          >\r\n            { ingredient.fat }\r\n          </dd>\r\n        </div>\r\n        <div className={styles.compositionItem}>\r\n          <dt className='mb-2'>Углеводы, г</dt>\r\n          <dd\r\n            className={'text_type_digits-default'}\r\n          >\r\n            { ingredient.carbohydrates }\r\n          </dd>\r\n        </div>\r\n      </dl>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default IngredientDetails;\r\n","import React, { FC } from 'react';\r\n\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { openModalAction } from '../../services/actions/modal';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport IngredientDetails from '../ingredient-details/ingredient-details';\r\n\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\nimport styles from './burger-ingredient-card.module.css';\r\n\r\nexport type TIngredientDragItem = {\r\n  id: string;\r\n  type: string;\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  proteins: number;\r\n  fat: number;\r\n  carbohydrates: number;\r\n  calories: number;\r\n}\r\n\r\nconst BurgerIngredientCard: FC<TIngredient> = ({\r\n  id,\r\n  type,\r\n  name,\r\n  price,\r\n  image,\r\n  proteins,\r\n  fat,\r\n  carbohydrates,\r\n  calories,\r\n  count,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const [, dragRef] = useDrag({\r\n    type: 'ingredient',\r\n    item: {\r\n      id,\r\n      type,\r\n      name,\r\n      price,\r\n      image,\r\n      proteins,\r\n      fat,\r\n      carbohydrates,\r\n      calories,\r\n    }\r\n  });\r\n\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        to={{\r\n          pathname: `/ingredients/${id}`,\r\n          state: { background: location}\r\n        }}\r\n        className={styles.card}\r\n        key={id}\r\n        ref={dragRef}\r\n        onClick={() => {\r\n          dispatch(openModalAction(IngredientDetails));\r\n        }}\r\n      >\r\n        <img\r\n          className={`${styles.image} pb-1`}\r\n          src={image}\r\n          alt={name}\r\n        />\r\n        <span className={`${styles.price} text_type_digits-default mb-1`}>\r\n          { price }\r\n          <i className='ml-2'>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </i>\r\n        </span>\r\n\r\n        <h3 className={`${styles.title} text_type_main-default`}>\r\n          { name }\r\n        </h3>\r\n\r\n        { count\r\n            ? (<i className={styles.counter}>\r\n                <Counter count={count} size=\"default\" />\r\n              </i>)\r\n            : null\r\n        }\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default BurgerIngredientCard;\r\n","import React, { useEffect, useCallback, FC } from 'react';\r\n\r\nimport BurgerIngredientCard from '../burger-ingredient-card/burger-ingredient-card';\r\n\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\nimport styles from './ingredient-section.module.css';\r\n\r\n\r\ntype TIngredientSectionProps = {\r\n  title: string;\r\n  ingredients: Array<TIngredient>;\r\n  isActive: boolean;\r\n  sectionRef: React.RefObject<HTMLInputElement|null> | null;\r\n  titleRef: React.RefObject<HTMLInputElement|null> | null;\r\n}\r\n\r\nconst IngredientSection: FC<TIngredientSectionProps> = ({\r\n  title,\r\n  ingredients,\r\n  isActive,\r\n  sectionRef,\r\n  titleRef,\r\n}) => {\r\n\r\n  const scrollIntoHeading = useCallback(() => {\r\n    if (isActive && sectionRef?.current) {\r\n      sectionRef.current?.scrollIntoView({\r\n        behavior: 'smooth',\r\n        block: 'start',\r\n      })\r\n    }\r\n  }, [isActive, sectionRef]);\r\n\r\n  useEffect(() => {\r\n    scrollIntoHeading();\r\n  }, [scrollIntoHeading])\r\n\r\n  if (ingredients.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <section className='pt-10' key={title} ref={sectionRef as any}>\r\n      <h2\r\n        className={`${styles.title} text_type_main-medium mb-6`}\r\n        ref={titleRef as any}\r\n      >\r\n        { title }\r\n      </h2>\r\n      <ul\r\n        className={`${styles.items} pl-4`}\r\n      >\r\n        {ingredients.map((item) => (\r\n          <li key={item.id}>\r\n            <BurgerIngredientCard\r\n              { ...item }\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\n\r\nexport default IngredientSection;\r\n","import React, { useState, useRef, useEffect, useCallback, useMemo, FC } from 'react';\r\n\r\nimport { useSelector } from '../../services/hooks';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nimport styles from './burger-ingredients.module.css';\r\n\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport IngredientSection from '../ingredient-section/ingredient-section';\r\n\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\n\r\ntype TNavTabs = Array<{\r\n  id: string;\r\n  navTitle: string;\r\n  sectionTitle: string;\r\n}>\r\n\r\nconst navTabs: TNavTabs = [\r\n  {id: 'bun', navTitle: 'Булки', sectionTitle: 'Булки'},\r\n  {id: 'sauce', navTitle: 'Соусы', sectionTitle: 'Соусы'},\r\n  {id: 'main', navTitle: 'Начинки', sectionTitle: 'Начинка'},\r\n];\r\n\r\nconst filterByType = (\r\n  items: Array<TIngredient>,\r\n  type: string\r\n) => {\r\n  return items.filter((item) => item.type === type);\r\n};\r\n\r\nconst BurgerIngredients: FC<{}> = () => {\r\n  const { items: ingredients } = useSelector((store) => store.ingredients);\r\n\r\n  const [current, setCurrent] = useState('bun');\r\n\r\n  const { ref: bunSectionRef, inView: bunInView } = useInView({\r\n    threshold: 0,\r\n  });\r\n  const { ref: sauceSectionRef, inView: sauceInView } = useInView({\r\n    threshold: 0,\r\n  });\r\n  const { ref: mainSectionRef, inView: mainInView } = useInView({\r\n    threshold: 0,\r\n  });\r\n\r\n  const sectionRefs = {\r\n    bunSectionRef,\r\n    sauceSectionRef,\r\n    mainSectionRef,\r\n  };\r\n\r\n  const bunTitleRef = useRef<HTMLLIElement|null>(null);\r\n  const sauceTitleRef = useRef<HTMLLIElement|null>(null);\r\n  const mainTitleRef = useRef<HTMLLIElement|null>(null);\r\n\r\n  const titleRefs = useMemo(() => ({\r\n    bunTitleRef,\r\n    sauceTitleRef,\r\n    mainTitleRef,\r\n  }), [bunTitleRef, sauceTitleRef, mainTitleRef]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (bunInView) {\r\n      setCurrent('bun');\r\n      return;\r\n    }\r\n    if (!bunInView && sauceInView) {\r\n      setCurrent('sauce');\r\n      return;\r\n    }\r\n    if (!sauceInView && mainInView) {\r\n      setCurrent('main');\r\n      return;\r\n    }\r\n  }, [bunInView, sauceInView, mainInView]);\r\n\r\n  const scrollToSection = useCallback((id: string) => {\r\n    const scrollSettings: ScrollIntoViewOptions = {\r\n      behavior: 'smooth',\r\n      block: 'start',\r\n    };\r\n\r\n    const {bunTitleRef, sauceTitleRef} = titleRefs;\r\n\r\n    switch (id) {\r\n      case 'bun': {\r\n        bunTitleRef.current?.scrollIntoView(scrollSettings);\r\n        break;\r\n      }\r\n      case 'sauce': {\r\n        sauceTitleRef.current?.scrollIntoView(scrollSettings);\r\n        break;\r\n      }\r\n      case 'main': {\r\n        mainTitleRef.current?.scrollIntoView(scrollSettings);\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  }, [titleRefs]);\r\n\r\n\r\n  return (\r\n    <section className='column mr-10'>\r\n      <h1 className={`${styles.sectionTitle} text_type_main-large pt-10 mb-5`}>\r\n        Соберите бургер\r\n      </h1>\r\n\r\n      <div className={styles.navigation}>\r\n        { navTabs.map(tab => {\r\n            return (\r\n              <Tab\r\n                key={tab.id}\r\n                value={tab.id}\r\n                active={current === tab.id}\r\n                onClick={() => {\r\n                  setCurrent(tab.id);\r\n                  scrollToSection(tab.id);\r\n                }}\r\n              >\r\n                { tab.navTitle }\r\n              </Tab>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n\r\n      <div className={`${styles.catalog} scroller`}>\r\n        { navTabs.map(tab => (\r\n            <IngredientSection\r\n              key={tab.id}\r\n              title={tab.sectionTitle}\r\n              isActive={current === tab.id}\r\n              ingredients={filterByType(ingredients, tab.id)}\r\n              sectionRef={sectionRefs[`${tab.id}SectionRef`]}\r\n              titleRef={titleRefs[`${tab.id}TitleRef`]}\r\n            />)\r\n          )\r\n        }\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\n\r\nexport default BurgerIngredients;\r\n","import React, { useRef, FC } from 'react';\r\n\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { moveItemAction } from '../../services/actions/burger-constructor';\r\n\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { DragIcon, ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components'\r\n\r\nimport styles from './burger-constructor.module.css';\r\n\r\n\r\ntype TDraggableItemProps = {\r\n  key: string;\r\n  id: string;\r\n  uuid: string;\r\n  index: number;\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst DraggableItem: FC<TDraggableItemProps> = ({\r\n  id,\r\n  uuid,\r\n  index,\r\n  name,\r\n  price,\r\n  image,\r\n  handleClose\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const dragabbleRef = useRef<HTMLLIElement|null>(null);\r\n\r\n  const [{isDrag}, dragItem] = useDrag({\r\n    type: 'constructorItem',\r\n    item: {id, uuid, index},\r\n    collect: (monitor) => ({\r\n      isDrag: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const [, dropTarget] = useDrop({\r\n    accept: 'constructorItem',\r\n    hover: (item: { id: string; uuid: string; index: number; }, monitor) => {\r\n      if (!dragabbleRef.current) {\r\n        return;\r\n      }\r\n\r\n      const dragged = item.index;\r\n      const hovered = index;\r\n\r\n      if (dragged === hovered) {\r\n        return;\r\n      }\r\n\r\n      const hoverBoundingRect = dragabbleRef.current?.getBoundingClientRect();\r\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      const clientOffset = monitor.getClientOffset();\r\n\r\n      if (clientOffset) {\r\n        const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n\r\n        if (dragged < hovered && hoverClientY < hoverMiddleY) {\r\n          return;\r\n        }\r\n        if (dragged > hovered && hoverClientY > hoverMiddleY) {\r\n          return;\r\n        }\r\n      }\r\n\r\n\r\n      dispatch(moveItemAction({dragged, hovered}));\r\n      item.index = hovered;\r\n    },\r\n  });\r\n\r\n  const setDndRefs = (node) => {\r\n    dragabbleRef.current = node;\r\n    dragItem(node);\r\n    dropTarget(node);\r\n  }\r\n\r\n  return (\r\n    <li\r\n      key={uuid}\r\n      className={`${styles.listItem} ${isDrag ? styles.draggingItem : ''}`}\r\n      ref={setDndRefs}\r\n    >\r\n      <i\r\n        className={`${styles.itemIcon} mr-2`}\r\n      >\r\n        <DragIcon type=\"primary\" />\r\n      </i>\r\n      <ConstructorElement\r\n        text={name}\r\n        price={price}\r\n        thumbnail={image}\r\n        handleClose={handleClose}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\n\r\nexport default DraggableItem;\r\n","import {\r\n  BURGER_CONSTRUCTOR_ADD_ITEM,\r\n  BURGER_CONSTRUCTOR_REMOVE_ITEM,\r\n  BURGER_CONSTRUCTOR_MOVE_ITEM,\r\n  BURGER_CONSTRUCTOR_SET_BUN,\r\n  BURGER_CONSTRUCTOR_CLEAR_CONSTRUCTOR,\r\n} from '../constants/action-types';\r\nimport { TConstructorIngredient } from '../types/data';\r\n\r\n\r\ntype TMoveItemInfo = {\r\n  dragged: number;\r\n  hovered: number;\r\n}\r\n\r\n// Action types\r\nexport type TAddItemAction = {\r\n  readonly type: typeof BURGER_CONSTRUCTOR_ADD_ITEM;\r\n  readonly payload: TConstructorIngredient;\r\n}\r\nexport type TRemoveItemAction = {\r\n  readonly type: typeof BURGER_CONSTRUCTOR_REMOVE_ITEM;\r\n  readonly payload: string;\r\n}\r\nexport type TMoveItemAction = {\r\n  readonly type: typeof BURGER_CONSTRUCTOR_MOVE_ITEM;\r\n  readonly payload: TMoveItemInfo;\r\n}\r\nexport type TSetBunAction = {\r\n  readonly type: typeof BURGER_CONSTRUCTOR_SET_BUN;\r\n  readonly payload: TConstructorIngredient;\r\n}\r\nexport type TClearConstructorAction = {\r\n  readonly type: typeof BURGER_CONSTRUCTOR_CLEAR_CONSTRUCTOR;\r\n}\r\n\r\n\r\n// All types\r\nexport type TBurgerConstructorActions =\r\n  | TAddItemAction\r\n  | TRemoveItemAction\r\n  | TMoveItemAction\r\n  | TSetBunAction\r\n  | TClearConstructorAction;\r\n\r\n\r\n// Action creators\r\nexport const addItemAction =\r\n  (item: TConstructorIngredient): TAddItemAction => ({\r\n    type: BURGER_CONSTRUCTOR_ADD_ITEM,\r\n    payload: item,\r\n  });\r\n\r\nexport const removeItemAction =\r\n  (ItemUuid: string): TRemoveItemAction => ({\r\n    type: BURGER_CONSTRUCTOR_REMOVE_ITEM,\r\n    payload: ItemUuid,\r\n  });\r\n\r\nexport const moveItemAction =\r\n  (obj: TMoveItemInfo): TMoveItemAction => ({\r\n    type: BURGER_CONSTRUCTOR_MOVE_ITEM,\r\n    payload: obj,\r\n  });\r\n\r\nexport const setBunAction =\r\n  (item: TConstructorIngredient): TSetBunAction => ({\r\n    type: BURGER_CONSTRUCTOR_SET_BUN,\r\n    payload: item,\r\n  });\r\n\r\nexport const clearConstructorAction = () => ({\r\n  type: BURGER_CONSTRUCTOR_CLEAR_CONSTRUCTOR,\r\n});\r\n","export default __webpack_public_path__ + \"static/media/done.c7a44869.gif\";","import React, { FC } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nimport successGif from '../../images/done.gif';\r\n\r\nimport styles from './order-details.module.css';\r\n\r\n\r\nconst OrderDetails: FC<{}> = () => {\r\n  const { orderData } = useSelector((store) => store.order);\r\n\r\n  return (\r\n    <>\r\n      <h2 className='visually-hidden'>Заказ передан в обработку</h2>\r\n\r\n      <dl className={`${styles.order} mt-30`}>\r\n        <dt className={`${styles.orderText} text_type_main-medium`}>идентификатор заказа</dt>\r\n        <dd className={`${styles.orderId} text_type_digits-large mb-8`}>\r\n          { orderData['number'] ? orderData['number'] : null }\r\n        </dd>\r\n      </dl>\r\n\r\n      <img\r\n        className='mt-15 mb-15'\r\n        alt='Success!'\r\n        src={successGif}\r\n        width='120'\r\n        height='120'\r\n      />\r\n\r\n      <p className={`${styles.text} text_type_main-default mb-2`}>\r\n        Ваш заказ начали готовить\r\n      </p>\r\n      <p className={`${styles.text} text_type_main-default text_color_inactive mb-30`}>\r\n        Дождитесь готовности на орбитальной станции\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default OrderDetails;\r\n","// Libraries\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n  FC,\r\n  ReactNode\r\n} from 'react';\r\nimport {\r\n  useSelector,\r\n  useDispatch\r\n} from '../../services/hooks';\r\nimport {\r\n  useHistory,\r\n  useLocation\r\n} from 'react-router-dom';\r\nimport { useDrop } from 'react-dnd';\r\n\r\n// Redux\r\nimport {\r\n  addItemAction,\r\n  removeItemAction,\r\n  setBunAction,\r\n  clearConstructorAction\r\n} from '../../services/actions/burger-constructor';\r\nimport {\r\n  increaseIngredientCountAction,\r\n  decreaseIngredientCountAction,\r\n  resetIngredientsCounterAction\r\n} from '../../services/actions/ingredients';\r\nimport {\r\n  resetRequestStatusAction,\r\n  sendOrderRequestAction\r\n} from '../../services/actions/order';\r\nimport { openModalAction } from '../../services/actions/modal';\r\n\r\n// Components\r\nimport {\r\n  ConstructorElement,\r\n  Button,\r\n  CurrencyIcon\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport DraggableItem from './draggable-item';\r\nimport OrderDetails from '../order-details/order-details';\r\nimport Loader from '../loader/loader';\r\n\r\n// Utils\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// Types\r\nimport { TIngredientDragItem } from '../burger-ingredient-card/burger-ingredient-card';\r\nimport { TConstructorIngredient } from '../../services/types/data';\r\n\r\nimport styles from './burger-constructor.module.css';\r\n\r\n\r\nconst BurgerConstructor: FC<{}> = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { items: ingredients } = useSelector((store) => store.burgerConstructor);\r\n  const {\r\n    ORDER_REQUEST,\r\n    ORDER_SUCCESS,\r\n  } = useSelector((store) => store.order);\r\n  const { user } = useSelector((store) => store.user);\r\n  const { isOpen } = useSelector((store) => store.modal);\r\n\r\n  useEffect(() => {\r\n    if (ORDER_SUCCESS) {\r\n      history.push(`/order`, { background: location });\r\n      dispatch(openModalAction(OrderDetails));\r\n      dispatch(resetRequestStatusAction());\r\n      dispatch(clearConstructorAction());\r\n      dispatch(resetIngredientsCounterAction());\r\n    }\r\n  }, [history, location, dispatch, isOpen, ORDER_SUCCESS]);\r\n\r\n  const [{canAccept}, dropTarget] = useDrop({\r\n    accept: 'ingredient',\r\n    drop(item: TIngredientDragItem) {\r\n      item.type === 'bun' ?\r\n        dispatch(setBunAction({ ...item, uuid: uuidv4() })) :\r\n        dispatch(addItemAction({ ...item, uuid: uuidv4() }));\r\n\r\n      dispatch(increaseIngredientCountAction({\r\n        id: item.id,\r\n        type: item.type,\r\n      }));\r\n    },\r\n    collect: (monitor) => ({\r\n      canAccept: monitor.canDrop(),\r\n    }),\r\n  });\r\n\r\n  const [hasBun, setHasBun] = useState<boolean>(false);\r\n\r\n  const bun = useMemo<TConstructorIngredient | null | undefined>(\r\n    () => {\r\n      const target = ingredients.find((item) => item.type === 'bun');\r\n\r\n      target ?\r\n        setHasBun(true) :\r\n        setHasBun(false);\r\n\r\n      return target;\r\n    }, [ingredients, setHasBun]\r\n  );\r\n\r\n  const fillings = useMemo<Array<TConstructorIngredient>>(\r\n    () => ingredients.filter((item) => item.type !== 'bun'),\r\n    [ingredients]\r\n  );\r\n\r\n  const orderList = useMemo<Array<TConstructorIngredient>>(\r\n    () => bun ? [bun, ...fillings, bun] : [...fillings],\r\n    [bun, fillings]\r\n  );\r\n\r\n  const totalPrice = useMemo<number>(\r\n    () => orderList.reduce((acc, item) => acc + item?.price, 0), [orderList]\r\n  );\r\n\r\n  const handleButtonClick = useCallback(() => {\r\n    if (!user) {\r\n      history.replace({\r\n        pathname: '/login',\r\n      })\r\n    }\r\n    else {\r\n      const requestData = {\r\n        ingredients: orderList.map((item) => item.id),\r\n      };\r\n      dispatch(sendOrderRequestAction(requestData));\r\n    }\r\n  }, [user, history, dispatch, orderList]);\r\n\r\n  const handleRemoveClick = useMemo(() => ({id, uuid}) => () => {\r\n    dispatch(removeItemAction(uuid));\r\n    dispatch(decreaseIngredientCountAction(id));\r\n  }, [dispatch]);\r\n\r\n  const orderButton = useMemo<ReactNode>(() => {\r\n    if (!hasBun) {\r\n      return (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          onClick={() => {}}\r\n        >\r\n          Добавьте булочку\r\n        </Button>\r\n      )\r\n    }\r\n\r\n    if (!fillings.length) {\r\n      return (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          onClick={() => {}}\r\n        >\r\n          Добавьте ингредиенты\r\n        </Button>\r\n      )\r\n    }\r\n\r\n    if (ORDER_REQUEST) {\r\n      return ( <Loader /> )\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        onClick={handleButtonClick}\r\n      >\r\n        Оформить заказ\r\n      </Button>\r\n    );\r\n  }, [fillings, hasBun, ORDER_REQUEST, handleButtonClick]);\r\n\r\n  if (ingredients.length === 0) {\r\n    return (\r\n      <section\r\n        className={`column pt-25 pr-4`}\r\n        ref={dropTarget}\r\n      >\r\n        <h2 className='visualliHidden'>\r\n          Ваша сборка\r\n        </h2>\r\n        <div className={`${styles.emptyConstructor} ${styles.emptyConstructor_maxHeight} ${canAccept ? styles.canAccept: ''}`}>\r\n          <p className={`text text_type_main-medium`}>\r\n            Перетащите ингредиенты сюда\r\n          </p>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={`${canAccept ? styles.canAccept: ''} column pt-25 pr-4`}\r\n      ref={dropTarget}\r\n    >\r\n      <h2 className='visualliHidden'>\r\n        Ваша сборка\r\n      </h2>\r\n\r\n    { bun && (\r\n        <div className='mb-4 pl-8 pr-4'>\r\n          <ConstructorElement\r\n            type={'top'}\r\n            isLocked={true}\r\n            text={`${bun.name} (верх)`}\r\n            price={bun.price}\r\n            thumbnail={bun.image}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    { !fillings.length && (\r\n        <ul\r\n          className={`${styles.ingredientsList} ${styles.emptyConstructor}`}\r\n        >\r\n          <li>\r\n            <p className={`text text_type_main-medium`}>\r\n              Добавьте ингредиенты\r\n            </p>\r\n          </li>\r\n        </ul>\r\n      )\r\n    }\r\n\r\n    { fillings.length > 0 && (\r\n        <ul\r\n          className={`${styles.ingredientsList} scroller`}\r\n        >\r\n          { ingredients.map((item, index) => {\r\n              if (item.type === 'bun') {\r\n                return null;\r\n              }\r\n              return (\r\n                <DraggableItem\r\n                  key={item.uuid}\r\n                  id={item.id}\r\n                  uuid={item.uuid}\r\n                  index={index}\r\n                  name={item.name}\r\n                  price={item.price}\r\n                  image={item.image}\r\n                  handleClose={handleRemoveClick(\r\n                    {uuid: item.uuid, id: item.id}\r\n                  )}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </ul>\r\n      )\r\n    }\r\n\r\n      { bun && (\r\n          <div className='mt-4 pl-8 pr-4'>\r\n            <ConstructorElement\r\n              type={'bottom'}\r\n              isLocked={true}\r\n              text={`${bun.name} (низ)`}\r\n              price={bun.price}\r\n              thumbnail={bun.image}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n\r\n      <div\r\n        className={`${styles.order} mt-10 pr-4`}\r\n      >\r\n        <span\r\n          className={`${styles.orderTotal} text_type_digits-medium mr-10`}\r\n        >\r\n          { totalPrice }\r\n          <i className={`${styles.orderCurrencyIcon} ml-2`}>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </i>\r\n        </span>\r\n\r\n        { orderButton }\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\n\r\nexport default BurgerConstructor;\r\n","import {\r\n  ORDER_REQUEST,\r\n  ORDER_SUCCESS,\r\n  ORDER_FAILURE,\r\n  ORDER_RESET_REQUEST_STATUS\r\n} from '../constants/action-types';\r\nimport { orderRequest } from '../api';\r\nimport { TOrderRecieved } from '../types/data';\r\nimport { TOrderSendData } from '../types/api';\r\nimport { refreshToken } from './user';\r\nimport { AppThunk } from '../types';\r\n\r\n\r\n// Action types\r\nexport type TRequestAction = {\r\n  readonly type: typeof ORDER_REQUEST;\r\n}\r\nexport type TSuccessAction = {\r\n  readonly type: typeof ORDER_SUCCESS;\r\n  readonly payload: TOrderRecieved;\r\n}\r\nexport type TFailureAction = {\r\n  readonly type: typeof ORDER_FAILURE;\r\n}\r\nexport type TResetRequestStatusAction = {\r\n  readonly type: typeof ORDER_RESET_REQUEST_STATUS;\r\n}\r\n\r\n\r\n// All types\r\nexport type TOrderActions =\r\n  | TRequestAction\r\n  | TSuccessAction\r\n  | TFailureAction\r\n  | TResetRequestStatusAction;\r\n\r\n\r\n// Action creators\r\nexport const requestAction =\r\n  (): TRequestAction => ({\r\n    type: ORDER_REQUEST,\r\n  });\r\n\r\nexport const successAction =\r\n  (payload: TOrderRecieved): TSuccessAction => ({\r\n    type: ORDER_SUCCESS,\r\n    payload,\r\n  });\r\n\r\nexport const failureAction =\r\n  (): TFailureAction => ({\r\n    type: ORDER_FAILURE,\r\n  });\r\n\r\nexport const resetRequestStatusAction =\r\n  (): TResetRequestStatusAction => ({\r\n    type: ORDER_RESET_REQUEST_STATUS,\r\n  });\r\n\r\n\r\n// Async actions\r\nexport const sendOrderRequestAction: AppThunk = (\r\n  orderData: TOrderSendData\r\n) => async (dispatch: AppThunk) => {\r\n  dispatch(requestAction());\r\n\r\n  await orderRequest(orderData)\r\n    .then((res) => {\r\n      if (!res.ok && !(res.status === 403)) {\r\n        throw new Error('Failed send order request');\r\n      };\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      if (!data.success) throw data;\r\n      dispatch(successAction({ ...data.order }));\r\n    })\r\n    .catch(err => {\r\n      if (err.message === 'jwt expired') {\r\n        dispatch(refreshToken(orderRequest(orderData)));\r\n      } else {\r\n        dispatch(failureAction());\r\n        console.error('Order request error:', err);\r\n      }\r\n    });\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredients';\r\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\r\n\r\n\r\nexport const HomePage: FC<{}> = () => {\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div className={`columnsContainer`}>\r\n        <BurgerIngredients />\r\n        <BurgerConstructor />\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n};\r\n","import React, { useMemo, FC } from 'react';\r\nimport { useDispatch, useSelector } from '../services/hooks';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport { getIngredientsAction } from '../services/actions/ingredients';\r\n\r\nimport Loader from '../components/loader/loader';\r\n\r\nimport layoutStyles from './page-layout.module.css';\r\nimport styles from './ingredient.module.css';\r\n\r\n\r\nexport const IngredientPage: FC<{}> = () => {\r\n  const dispatch = useDispatch();\r\n  const { items: ingredients } = useSelector((store) => store.ingredients);\r\n\r\n  const { id } = useParams() as any;\r\n\r\n  const ingredient = useMemo(\r\n    () => ingredients.find((item) => item.id === id),\r\n    [ingredients, id]\r\n  );\r\n\r\n  if (!ingredients.length) {\r\n    dispatch(getIngredientsAction());\r\n    return (\r\n      <div className={`${styles.loaderContainer} pt-30`}>\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!ingredient) {\r\n    return (\r\n      <section className={`${layoutStyles.pageContainer}`}>\r\n        <h2 className={`text text_type_main-large mb-20 pt-30`}>\r\n          Ошибка!\r\n        </h2>\r\n        <p className={`text text_type_main-medium mb-4`}>\r\n          Невозможно получить информацию об ингредиенте.\r\n        </p>\r\n        <p>\r\n          <Link to='/' className={`${layoutStyles.link}`}>\r\n            На главную\r\n          </Link>\r\n        </p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className={`${layoutStyles.pageContainer} ${styles.container} center-children mt-30`}>\r\n      <h1 className={`${styles.title} text text_type_main-large mt-10`}>\r\n        Детали ингредиента\r\n      </h1>\r\n\r\n      <img\r\n        className='mb-4'\r\n        src={ingredient.imageLarge}\r\n        alt={ingredient.name}\r\n        width='480'\r\n        height='240'\r\n      />\r\n\r\n      <h2\r\n        className={`${styles.ingredientName} text_type_main-medium mb-8`}\r\n      >\r\n        { ingredient.name }\r\n      </h2>\r\n\r\n      <dl className={`${styles.composition} text_type_main-default text_color_inactive mb-15`}>\r\n        <div className={styles.compositionItem}>\r\n          <dt className='mb-2'>Калории,ккал</dt>\r\n          <dd\r\n            className={'text_type_digits-default'}\r\n          >\r\n            { ingredient.calories }\r\n          </dd>\r\n        </div>\r\n        <div className={styles.compositionItem}>\r\n          <dt className='mb-2'>Белки, г</dt>\r\n          <dd\r\n            className={'text_type_digits-default'}\r\n          >\r\n            { ingredient.proteins }\r\n          </dd>\r\n        </div>\r\n        <div className={styles.compositionItem}>\r\n          <dt className='mb-2'>Жиры, г</dt>\r\n          <dd\r\n            className={'text_type_digits-default'}\r\n          >\r\n            { ingredient.fat }\r\n          </dd>\r\n        </div>\r\n        <div className={styles.compositionItem}>\r\n          <dt className='mb-2'>Углеводы, г</dt>\r\n          <dd\r\n            className={'text_type_digits-default'}\r\n          >\r\n            { ingredient.carbohydrates }\r\n          </dd>\r\n        </div>\r\n      </dl>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useState, useMemo, useCallback, FC } from 'react';\r\nimport { Redirect, Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport { loginUser } from '../services/actions/user';\r\n\r\nimport {\r\n  setValueAction,\r\n  clearFormAction\r\n} from '../services/actions/form-login';\r\n\r\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Loader from '../components/loader/loader';\r\n\r\nimport { regExpEmail } from '../utils/regexp';\r\n\r\nimport styles from './page-layout.module.css';\r\n\r\n\r\nexport const LoginPage: FC<{}> = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { form } = useSelector((store) => store.formLogin);\r\n  const { user, LOGIN_REQUEST, LOGIN_SUCCESS } = useSelector((store) => store.user);\r\n  const [isPasswordVisable, setPasswordVisability] = useState<boolean>(false);\r\n  const [isEmailValid, setIsEmailValid] = useState<boolean>(true);\r\n  const [isPasswordValid, setIsPasswordValid] = useState<boolean>(true);\r\n\r\n  const { from } = useMemo((): any => {\r\n    return location.state || { from: { pathname: '/' } }\r\n  }, [location]);\r\n\r\n  const onInputChange = useCallback((\r\n    evt: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    if (evt.target.name === 'email') {\r\n      setIsEmailValid(regExpEmail.test(evt.target.value));\r\n    }\r\n    if (evt.target.name === 'password') {\r\n      setIsPasswordValid(evt.target.value !== '');\r\n    }\r\n\r\n    dispatch(setValueAction({\r\n      name: evt.target.name,\r\n      value: evt.target.value\r\n    }));\r\n  }, [dispatch]);\r\n\r\n  const onIconClick = () => {\r\n    setPasswordVisability(!isPasswordVisable);\r\n  };\r\n\r\n  const handleSubmit = (evt: React.FormEvent) => {\r\n    evt.preventDefault();\r\n    if (form.email !== ''\r\n      && isEmailValid\r\n      && form.password !== '') {\r\n        dispatch(loginUser(form));\r\n      }\r\n  };\r\n\r\n  if (LOGIN_SUCCESS && user) {\r\n    history.replace(from);\r\n    dispatch(clearFormAction());\r\n  } else if (user) {\r\n    return (\r\n      <Redirect\r\n        to={'/'}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className={`${styles.formContainer} pt-30`}>\r\n      <h1 className={`text text_type_main-medium mb-6`}>\r\n        Вход\r\n      </h1>\r\n\r\n      <form\r\n        className={`${styles.form} mb-20`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className={`${styles.inputWrapper} mb-6`}>\r\n          <Input\r\n            type={'email'}\r\n            placeholder={'E-mail'}\r\n            onChange={onInputChange}\r\n            value={form.email}\r\n            name={'email'}\r\n            error={!isEmailValid}\r\n            errorText={'Некорректный email'}\r\n            size={'default'}\r\n          />\r\n        </div>\r\n\r\n        <div className={`${styles.inputWrapper} mb-6`}>\r\n          { isPasswordVisable\r\n            ? (\r\n              <Input\r\n                type={'text'}\r\n                placeholder={'Пароль'}\r\n                onChange={onInputChange}\r\n                icon={'HideIcon'}\r\n                value={form.password}\r\n                name={'password'}\r\n                error={!isPasswordValid}\r\n                onIconClick={onIconClick}\r\n                errorText={'Не может быть пустым'}\r\n                size={'default'} />\r\n              ) : (\r\n              <Input\r\n                type={'password'}\r\n                placeholder={'Пароль'}\r\n                onChange={onInputChange}\r\n                icon={'ShowIcon'}\r\n                value={form.password}\r\n                name={'password'}\r\n                error={!isPasswordValid}\r\n                onIconClick={onIconClick}\r\n                errorText={'Не может быть пустым'}\r\n                size={'default'} />)\r\n          }\r\n        </div>\r\n\r\n        { LOGIN_REQUEST\r\n          ? ( <Loader /> )\r\n          : (\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"medium\"\r\n            >\r\n              Войти\r\n            </Button>\r\n          )\r\n        }\r\n      </form>\r\n\r\n      <p className={'text text_type_main-default text_color_inactive mb-4'}>\r\n        Вы — новый пользователь? <Link to='/register' className={styles.link}>Зарегистрироваться</Link>\r\n      </p>\r\n\r\n      <p className={'text text_type_main-default text_color_inactive'}>\r\n        Забыли пароль? <Link to='/forgot-password' className={styles.link}>Восстановить пароль</Link>\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n","import {\r\n  FORM_LOGIN_SET_VALUE,\r\n  FORM_LOGIN_CLEAR_FORM\r\n} from '../constants/action-types';\r\n\r\n\r\ntype TFormSetData = { name: string; value: string; }\r\n\r\n// Action types\r\nexport type TSetValueAction = {\r\n  readonly type: typeof FORM_LOGIN_SET_VALUE;\r\n  readonly payload: TFormSetData;\r\n}\r\nexport type TClearFormAction = {\r\n  readonly type: typeof FORM_LOGIN_CLEAR_FORM;\r\n}\r\n\r\n\r\n// All types\r\nexport type TFormLoginActions =\r\n  | TSetValueAction\r\n  | TClearFormAction;\r\n\r\n\r\n// Action creators\r\nexport const setValueAction =\r\n  (payload: TFormSetData): TSetValueAction => ({\r\n    type: FORM_LOGIN_SET_VALUE,\r\n    payload\r\n  });\r\n\r\nexport const clearFormAction =\r\n  (): TClearFormAction => ({\r\n    type: FORM_LOGIN_CLEAR_FORM,\r\n  });\r\n","import React, { useMemo, useState, useEffect, FC } from 'react';\r\nimport { useSelector } from '../services/hooks';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { getIngredientsData } from '../utils/utils';\r\nimport { formatDate } from '../utils/dates';\r\nimport { getOrderRequest } from '../services/api';\r\n\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Loader from '../components/loader/loader';\r\nimport OrderStatus from '../components/order-status/order-status';\r\n\r\nimport {\r\n  TCardIngredient,\r\n  TWsOrderRecieved,\r\n  TOrdersTapeResponse\r\n} from '../services/types/data';\r\n\r\nimport layoutStyles from './page-layout.module.css';\r\nimport styles from './order.module.css';\r\n\r\n\r\nconst generateIngredientElement = ({\r\n  img,\r\n  name,\r\n  count,\r\n  price\r\n}: TCardIngredient): JSX.Element => {\r\n  return (\r\n    <li className={`${styles.ingredient} text text_type_main-default`} key={name}>\r\n      <div className={`${styles.ingredientPreview} mr-4`}>\r\n        <img className={`mr-4`} src={img} alt={name} />\r\n      </div>\r\n      <p className={`${styles.ingredientName} mr-4`}>\r\n        { name }\r\n      </p>\r\n      <p className={`${styles.ingredientPrice} text_type_digits-default`}>\r\n        { `${count} x ${price}` }\r\n        <i className={`ml-2`}>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </i>\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n\r\n\r\nexport const OrderPage: FC<{}> = () => {\r\n  const { items: ingredientsDatabase } = useSelector((store) => store.ingredients);\r\n  const { orderNumber } = useParams() as { [key: string]: string };\r\n  const [ order, setOrder ] = useState<TWsOrderRecieved|null>(null);\r\n  const [ requestStatus, setRequesStatus ] = useState({\r\n    PENDING: false,\r\n    SUCCESS: false,\r\n    ERROR: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    setRequesStatus({PENDING: true, SUCCESS: false, ERROR: true});\r\n\r\n    getOrderRequest(orderNumber)\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          setRequesStatus({PENDING: false, SUCCESS: false, ERROR: true});\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data: TOrdersTapeResponse) => {\r\n        setOrder(data.orders[0]);\r\n        setRequesStatus({PENDING: false, SUCCESS: true, ERROR: false})\r\n      })\r\n      .catch(err => {\r\n        setRequesStatus({PENDING: false, SUCCESS: false, ERROR: true});\r\n        console.error(err);\r\n      })\r\n  }, [orderNumber]);\r\n\r\n  const ingredientsData = useMemo(\r\n    () => {\r\n      if (order && ingredientsDatabase.length) {\r\n        return getIngredientsData(order?.ingredients, ingredientsDatabase);\r\n      }\r\n      return [];\r\n    },\r\n    [order, ingredientsDatabase]\r\n  );\r\n  const totalPrice = useMemo(\r\n    () => ingredientsData.reduce((acc, item) => acc + item.price, 0),\r\n    [ingredientsData]\r\n  );\r\n\r\n  if (requestStatus.PENDING || !ingredientsDatabase || !ingredientsDatabase.length) {\r\n    return (\r\n      <div className={`${layoutStyles.loaderContainer} pt-30`}>\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (requestStatus.ERROR) {\r\n    <div className={`${layoutStyles.loaderContainer} pt-30`}>\r\n      <h1 className={`text text_type_main-large text-with-glow mb-20`}>\r\n        Что-то пошло не так :(\r\n      </h1>\r\n      <p className={`text text_type_main-medium mb-4`}>\r\n        Не получилось получить данные о заказе\r\n      </p>\r\n    </div>\r\n  }\r\n\r\n  if (order && !order.number) {\r\n    <div className={`${layoutStyles.loaderContainer} pt-30`}>\r\n      <h1 className={`text text_type_main-large text-with-glow mb-20`}>\r\n        Что-то пошло не так :(\r\n      </h1>\r\n      <p className={`text text_type_main-medium mb-4`}>\r\n        Не получилось получить данные о заказе\r\n      </p>\r\n      <p className={`text text_type_main-medium`}>\r\n        Возможно указан некорректный номер заказа\r\n      </p>\r\n    </div>\r\n  }\r\n\r\n  if (order) {\r\n  const { name, number, status, createdAt } = order;\r\n  const orderNumberToShow = `#${String(number).padStart(6,'0')}`;\r\n  const dateToShow = formatDate(createdAt);\r\n\r\n  return (\r\n    <section className={`${styles.pageContainer} text text_type_main-default pt-30`}>\r\n      <h1 className={`visualliHidden`}>\r\n        Информация о заказе\r\n      </h1>\r\n\r\n      <h2 className={`${styles.orderNumber} text text_type_digits-default mb-10`}>\r\n        { orderNumberToShow }\r\n      </h2>\r\n\r\n      <p className={`${styles.orderName} text text_type_main-medium mb-3`}>\r\n        { name }\r\n      </p>\r\n\r\n      <p className={`${styles.orderStatus} mb-15`}>\r\n        <OrderStatus status={status} />\r\n      </p>\r\n\r\n      <h3 className={`${styles.orderComposition} text text_type_main-medium mb-6`}>\r\n        Состав:\r\n      </h3>\r\n\r\n      <ul className={`${styles.ingredientsList} scroller pr-6 mb-10`}>\r\n        { ingredientsData.map(\r\n          (data) => generateIngredientElement(data)\r\n        ) }\r\n      </ul>\r\n\r\n      <div className={`${styles.orderColumns}`}>\r\n        <p className={`${styles.orderDate} text_type_main-default text_color_inactive`}>\r\n          { dateToShow }\r\n        </p>\r\n\r\n        <p className={`${styles.orderTotalPrice} text_type_digits-default`}>\r\n          { totalPrice }\r\n          <i className={`ml-2`}>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </i>\r\n        </p>\r\n      </div>\r\n    </section>\r\n  )\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n","import React, { useCallback, FC } from \"react\";\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { useDispatch } from '../../services/hooks';\r\n\r\nimport { logoutUser } from '../../services/actions/user';\r\n\r\nimport styles from './profile-navigation.module.css';\r\n\r\n\r\ntype TProfileNavigationProps = {\r\n  extraClasses: string;\r\n}\r\n\r\nconst LinkClasses = {\r\n  default: `${styles.navLink} text_color_inactive`,\r\n  active: `${styles.navLink_active}`,\r\n}\r\n\r\n\r\nconst ProfileNavigation: FC<TProfileNavigationProps> = ({ extraClasses }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onExitClick = useCallback((evt: React.MouseEvent) => {\r\n    evt.preventDefault();\r\n    dispatch(logoutUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={`${styles.list} ${extraClasses} text text_type_main-medium`}>\r\n      <li className={`${styles.list_item}`}>\r\n        <NavLink\r\n          to={`/profile`}\r\n          exact\r\n          className={LinkClasses.default}\r\n          activeClassName={LinkClasses.active}\r\n        >\r\n          Профиль\r\n        </NavLink>\r\n      </li>\r\n      <li className={`${styles.list_item}`}>\r\n        <NavLink\r\n          to={`/profile/orders`}\r\n          className={LinkClasses.default}\r\n          activeClassName={LinkClasses.active}\r\n        >\r\n          История заказов\r\n        </NavLink>\r\n      </li>\r\n      <li className={`${styles.list_item}`}>\r\n        <Link\r\n          to={`/`}\r\n          className={LinkClasses.default}\r\n          onClick={onExitClick}\r\n        >\r\n          Выход\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nexport default ProfileNavigation;\r\n","import React, { useEffect, useCallback, FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport {\r\n  setInitialValueAction,\r\n  setValueAction,\r\n  resetFormAction,\r\n  clearFormAction,\r\n} from '../../services/actions/form-profile';\r\nimport { patchUserData } from '../../services/actions/user';\r\n\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Loader from \"../loader/loader\";\r\n\r\nimport styles from './form-profile-update-user.module.css';\r\n\r\n\r\nconst FormProfileUpdateUser: FC<{}> = () => {\r\n  const dispatch = useDispatch();\r\n  const { form } = useSelector((store) => store.formProfile);\r\n  const {\r\n    user,\r\n    PATCH_USER_REQUEST,\r\n  } = useSelector((store) => store.user);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      dispatch(setInitialValueAction(user));\r\n    }\r\n    return () => {\r\n      dispatch(clearFormAction());\r\n    }\r\n  }, [dispatch, user]);\r\n\r\n  const onInputChange = useCallback((evt) => {\r\n    dispatch(setValueAction({\r\n      name: evt.target.name,\r\n      value: evt.target.value,\r\n    }));\r\n  }, [dispatch]);\r\n\r\n  const handleSubmit = useCallback((evt: React.FormEvent) => {\r\n    evt.preventDefault();\r\n    dispatch(patchUserData(form));\r\n  }, [dispatch, form]);\r\n\r\n  const onResetButtonClick = useCallback((evt: React.MouseEvent) => {\r\n    evt.preventDefault();\r\n    dispatch(resetFormAction());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <form\r\n      className={`${styles.form}`}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <div className={`${styles.inputWrapper} mb-6`}>\r\n        <Input\r\n          type={'text'}\r\n          placeholder={'Имя'}\r\n          onChange={onInputChange}\r\n          icon={'EditIcon'}\r\n          value={form.name? form.name : '' }\r\n          name={'name'}\r\n          error={false}\r\n          errorText={'Недопустимое имя'}\r\n          size={'default'}\r\n        />\r\n      </div>\r\n\r\n      <div className={`${styles.inputWrapper} mb-6`}>\r\n        <Input\r\n          type={'email'}\r\n          placeholder={'Логин'}\r\n          onChange={onInputChange}\r\n          icon={'EditIcon'}\r\n          value={form.email ? form.email : ''}\r\n          name={'email'}\r\n          error={false}\r\n          errorText={'Некоррекнтый email'}\r\n          size={'default'}\r\n        />\r\n      </div>\r\n\r\n      <div className={`${styles.inputWrapper} mb-6`}>\r\n        <Input\r\n          type={'password'}\r\n          placeholder={'Пароль'}\r\n          onChange={onInputChange}\r\n          icon={'EditIcon'}\r\n          value={form.password ? form.password : ''}\r\n          name={'password'}\r\n          error={false}\r\n          errorText={'Недопустимые символы'}\r\n          size={'default'}\r\n        />\r\n      </div>\r\n\r\n      <div className={`${styles.formControls}`}>\r\n        <Button\r\n          type=\"secondary\"\r\n          size=\"medium\"\r\n          onClick={onResetButtonClick as () => void}\r\n        >\r\n          Отменить\r\n        </Button>\r\n\r\n        { PATCH_USER_REQUEST\r\n          ? (<Loader />)\r\n          : (\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"medium\"\r\n            >\r\n              Сохранить\r\n            </Button>\r\n          )\r\n        }\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\nexport default FormProfileUpdateUser;\r\n","import {\r\n  FORM_PROFILE_SET_INITIAL_VALUE,\r\n  FORM_PROFILE_SET_VALUE,\r\n  FORM_PROFILE_RESET_FORM,\r\n  FORM_PROFILE_CLEAR_FORM\r\n} from '../constants/action-types';\r\n\r\n\r\ntype TSetFormPayload = {\r\n  email: string;\r\n  name: string;\r\n  password?: string;\r\n}\r\n\r\ntype TFormSetData = { name: string; value: string; }\r\n\r\n// Action types\r\nexport type TSetInitialValueAction = {\r\n  readonly type: typeof FORM_PROFILE_SET_INITIAL_VALUE;\r\n  readonly payload: TSetFormPayload;\r\n}\r\nexport type TSetValueAction = {\r\n  readonly type: typeof FORM_PROFILE_SET_VALUE;\r\n  readonly payload: TFormSetData;\r\n}\r\nexport type TResetFormAction = {\r\n  readonly type: typeof FORM_PROFILE_RESET_FORM;\r\n}\r\nexport type TClearFormAction = {\r\n  readonly type: typeof FORM_PROFILE_CLEAR_FORM;\r\n}\r\n\r\n\r\n// All types\r\nexport type TFormProfileActions =\r\n  | TSetInitialValueAction\r\n  | TSetValueAction\r\n  | TResetFormAction\r\n  | TClearFormAction;\r\n\r\n\r\n// Action creators\r\nexport const setInitialValueAction =\r\n  (payload: TSetFormPayload): TSetInitialValueAction => ({\r\n    type: FORM_PROFILE_SET_INITIAL_VALUE,\r\n    payload,\r\n  });\r\n\r\nexport const setValueAction =\r\n  (payload: TFormSetData): TSetValueAction => ({\r\n    type: FORM_PROFILE_SET_VALUE,\r\n    payload,\r\n  });\r\n\r\nexport const resetFormAction =\r\n  (): TResetFormAction => ({\r\n    type: FORM_PROFILE_RESET_FORM,\r\n  });\r\n\r\nexport const clearFormAction =\r\n  (): TClearFormAction => ({\r\n    type: FORM_PROFILE_CLEAR_FORM,\r\n  });\r\n","import React, { FC } from 'react';\r\n\r\nimport ProfileNavigation from '../components/profile-navigation/profile-navigation';\r\nimport FormProfileUpdateUser from '../components/form-profile-update-user/form-profile-update-user';\r\n\r\nimport styles from './profile.module.css';\r\n\r\n\r\nexport const ProfilePage: FC<{}> = () => {\r\n  return (\r\n    <section className={`${styles.pageContainer} pt-10`}>\r\n      <h1 className={`visualliHidden`}>\r\n        { `Провиль пользователя` }\r\n      </h1>\r\n\r\n      <div className={`${styles.columnsContainer} mr-15`}>\r\n        <div className={`${styles.navContainer} mr-15`}>\r\n          <ProfileNavigation extraClasses={`mb-20`} />\r\n\r\n          <p className={`text text_type_main-default text-dark`}>\r\n            В этом разделе вы можете изменить свои персональные данные\r\n          </p>\r\n        </div>\r\n\r\n        <div className={`${styles.profileContent}`}>\r\n          <FormProfileUpdateUser />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useMemo, FC } from 'react';\r\n\r\nimport { getIngredientsData } from '../../utils/utils';\r\nimport { formatDate } from '../../utils/dates';\r\n\r\nimport PreviewItem from '../preview-item/preview-item';\r\nimport OrderStatus from '../order-status/order-status';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport {\r\n  TWsOrderRecieved,\r\n  TIngredient\r\n} from '../../services/types/data';\r\n\r\nimport styles from './order-card.module.css';\r\n\r\n\r\ntype TOrderCardProps = {\r\n  orderInfo: TWsOrderRecieved;\r\n  ingredientsList: Array<TIngredient>;\r\n}\r\n\r\n\r\nconst MAX_INGREDIENTS_PREVIEW: number = 10;\r\n\r\n\r\nconst OrderCard: FC<TOrderCardProps> = ({\r\n  orderInfo,\r\n  ingredientsList\r\n}) => {\r\n  const {\r\n    ingredients,\r\n    name,\r\n    createdAt,\r\n    number,\r\n    status\r\n  } = orderInfo;\r\n  const dateToShow = formatDate(createdAt);\r\n\r\n  const ingredientsData = useMemo(\r\n    () => getIngredientsData(ingredients, ingredientsList),\r\n    [ingredients, ingredientsList]\r\n  );\r\n\r\n  const totalPrice = useMemo(\r\n    () => ingredientsData.reduce((acc, item) => acc + item.price * item.count, 0),\r\n    [ingredientsData]\r\n  );\r\n\r\n  const ingredientsToPreview = useMemo(\r\n    () => ingredientsData.length > MAX_INGREDIENTS_PREVIEW\r\n      ? ingredientsData.slice(0, MAX_INGREDIENTS_PREVIEW)\r\n      : ingredientsData\r\n  , [ingredientsData]);\r\n\r\n  const leftItems = useMemo(() => {\r\n    return (ingredientsData.length > MAX_INGREDIENTS_PREVIEW)\r\n     ? ingredientsData.length - MAX_INGREDIENTS_PREVIEW\r\n     : 0;\r\n  }, [ingredientsData]);\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.card} text text_type_main-default p-6`}\r\n    >\r\n      <div className={`${styles.card_header} mb-6`}>\r\n        <p className={`text text_type_digits-default`}>\r\n          {`#${String(number).padStart(6, '0')}`}\r\n        </p>\r\n        <p className={`text text_type_main-default text_color_inactive`}>\r\n          { dateToShow }\r\n        </p>\r\n      </div>\r\n\r\n      <h3 className={`text text_type_main-medium mb-2`}>\r\n        { name }\r\n      </h3>\r\n\r\n      <p className={`text mb-6`}>\r\n        <OrderStatus status={status} />\r\n      </p>\r\n\r\n      <div className={`${styles.card_footer}`}>\r\n        <ul className={`${styles.card_ingredientsPreview}`}>\r\n          { ingredientsToPreview.map(\r\n              ({ img, name, count}) => (\r\n                <PreviewItem\r\n                  key={name}\r\n                  img={img}\r\n                  name={img}\r\n                  count={count}\r\n                />\r\n              )\r\n            )\r\n          }\r\n          { leftItems\r\n            ? <PreviewItem key={'lastInfo'} leftItems={leftItems} />\r\n            : null\r\n          }\r\n        </ul>\r\n\r\n        <p className={`${styles.card_totalPrice} text text_type_digits-default`}>\r\n          { totalPrice }\r\n          <i className={`${styles.card_totalPriceIcon} ml-2`}>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </i>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\n\r\nexport default OrderCard;\r\n","import React, { useEffect, useMemo, FC } from 'react';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\r\n\r\nimport { openModalAction } from '../../services/actions/modal';\r\nimport {\r\n  wsConnectionStart,\r\n  wsConnectionClosed\r\n} from '../../services/actions/websocket';\r\nimport { wsUserOrdersApi } from '../../services/api';\r\nimport { getCookie } from '../../utils/cookie';\r\n\r\nimport Loader from '../loader/loader';\r\nimport OrderCard from './order-card';\r\nimport OrderInfo from '../order-info/order-info';\r\n\r\nimport styles from './user-orders.module.css';\r\n\r\n\r\nconst UserOrders: FC<{}> = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const { url } = useRouteMatch();\r\n  const { items: ingredientsDatabase } = useSelector((store) => store.ingredients);\r\n  const { wsConnected, error, orders } = useSelector((store) => store.websocket);\r\n\r\n  const sortedOrders = useMemo(\r\n    () => orders.length\r\n      ? [...orders].reverse()\r\n      : [],\r\n    [orders]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const wsUrl = `${wsUserOrdersApi}${getCookie('accessToken')}`;\r\n    dispatch(wsConnectionStart(wsUrl));\r\n    return () => {\r\n      dispatch(wsConnectionClosed());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  if ((!wsConnected && !error)\r\n    || !ingredientsDatabase.length) {\r\n    return (\r\n      <div className={`${styles.loaderContainer} pt-30`}>\r\n        <Loader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={`pt-20`}>\r\n        <p className={`text text_type_main-large text-with-glow mb-4`}>\r\n          Произошла ошибка :(\r\n        </p>\r\n        <p className={`text text_type_main-medium`}>\r\n          Не получилось загрузить данные с сервера\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!orders.length) {\r\n    return (\r\n      <div className={`pt-20`}>\r\n        <p className={`text text_type_main-large text-with-glow mb-4`}>\r\n          Здесь пусто :(\r\n        </p>\r\n        <p className={`text text_type_main-medium`}>\r\n          {`Вы можете оформить свой первый заказ `}\r\n          <Link\r\n            to='/'\r\n            className={`${styles.link}`}\r\n          >\r\n            на главной.\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className={`${styles.list} scroller`}>\r\n      { sortedOrders.map(\r\n        (order) => (\r\n          <li className={`mb-6`} key={order.number}>\r\n            <Link\r\n              className={`${styles.list_link}`}\r\n              to={{\r\n                pathname: `${url}/${order.number}`,\r\n                state: { background: location}\r\n              }}\r\n              onClick={() => {\r\n                dispatch(openModalAction(OrderInfo));\r\n              }}\r\n            >\r\n              <OrderCard\r\n                orderInfo={order}\r\n                ingredientsList={ingredientsDatabase}\r\n              />\r\n            </Link>\r\n          </li>\r\n        )\r\n      ) }\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nexport default UserOrders;\r\n","import React, { FC } from 'react';\r\n\r\nimport ProfileNavigation from '../components/profile-navigation/profile-navigation';\r\nimport UserOrders from '../components/user-orders/user-orders';\r\n\r\nimport styles from './profile.module.css';\r\n\r\n\r\nexport const ProfileOrdersPage: FC<{}> = () => {\r\n  return (\r\n    <section className={`${styles.pageContainer} pt-10`}>\r\n      <h1 className={`visualliHidden`}>\r\n        { `История заказов` }\r\n      </h1>\r\n\r\n      <div className={`${styles.columnsContainer} mr-15`}>\r\n        <div className={`${styles.navContainer} mr-15`}>\r\n          <ProfileNavigation extraClasses={`mb-20`} />\r\n\r\n          <p className={`text text_type_main-default text-dark`}>\r\n            В этом разделе вы можете просмотреть историю ваших заказов\r\n          </p>\r\n        </div>\r\n\r\n        <div className={`${styles.profileContent}`}>\r\n          <UserOrders />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback, FC } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport {\r\n  setValueAction\r\n} from '../services/actions/form-register';\r\nimport { registerUser } from '../services/actions/user';\r\n\r\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Loader from '../components/loader/loader';\r\n\r\nimport styles from './page-layout.module.css';\r\n\r\nimport { regExpEmail } from '../utils/regexp';\r\n\r\n\r\nexport const RegisterPage: FC<{}> = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const {\r\n    form\r\n  } = useSelector((store) => store.formRegister);\r\n  const {\r\n    REGISTER_REQUEST,\r\n    REGISTER_SUCCESS\r\n  } = useSelector((store) => store.user);\r\n\r\n  const [isEmailValid, setIsEmailValid] = useState<boolean>(true);\r\n  const [isPasswordValid, setIsPasswordValid] = useState<boolean>(true);\r\n  const [isPasswordVisable, setPasswordVisability] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (REGISTER_SUCCESS) {\r\n      history.replace({pathname: '/'});\r\n    }\r\n  }, [history, REGISTER_SUCCESS]);\r\n\r\n  const onInputChange = useCallback((\r\n    evt: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    if (evt.target.name === 'email') {\r\n      setIsEmailValid(regExpEmail.test(evt.target.value));\r\n    }\r\n    if (evt.target.name === 'password') {\r\n      setIsPasswordValid(evt.target.value !== '');\r\n    }\r\n\r\n    dispatch(setValueAction({\r\n      name: evt.target.name,\r\n      value: evt.target.value\r\n    }));\r\n  }, [dispatch]);\r\n\r\n\r\n  const onIconClick = () => {\r\n    setPasswordVisability(!isPasswordVisable);\r\n  };\r\n\r\n  const handleSubmit = (evt: React.FormEvent) => {\r\n    evt.preventDefault();\r\n    if ( form.email !== ''\r\n      && isEmailValid\r\n      && form.password !== ''\r\n      && form.name !== '') {\r\n      dispatch(registerUser(form));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={`${styles.formContainer} pt-30`}>\r\n      <h1 className={`text text_type_main-medium mb-6`}>\r\n        Регистрация\r\n      </h1>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={`${styles.inputWrapper} mb-6`}>\r\n          <Input\r\n            type={'text'}\r\n            placeholder={'Имя'}\r\n            onChange={onInputChange}\r\n            value={form.name}\r\n            name={'name'}\r\n            error={false}\r\n            errorText={'Недопустимые символы'}\r\n            size={'default'}\r\n          />\r\n        </div>\r\n\r\n        <div className={`${styles.inputWrapper} mb-6`}>\r\n          <Input\r\n            type={'email'}\r\n            placeholder={'E-mail'}\r\n            onChange={onInputChange}\r\n            value={form.email}\r\n            name={'email'}\r\n            error={!isEmailValid}\r\n            errorText={'Некорректный email'}\r\n            size={'default'}\r\n          />\r\n        </div>\r\n\r\n        <div className={`${styles.inputWrapper} mb-6`}>\r\n          { isPasswordVisable\r\n            ? (\r\n              <Input\r\n                type={'text'}\r\n                placeholder={'Пароль'}\r\n                onChange={onInputChange}\r\n                icon={'HideIcon'}\r\n                value={form.password}\r\n                name={'password'}\r\n                error={!isPasswordValid}\r\n                onIconClick={onIconClick}\r\n                errorText={'Недопустимые символы'}\r\n                size={'default'} />\r\n              ) : (\r\n              <Input\r\n                type={'password'}\r\n                placeholder={'Пароль'}\r\n                onChange={onInputChange}\r\n                icon={'ShowIcon'}\r\n                value={form.password}\r\n                name={'password'}\r\n                error={!isPasswordValid}\r\n                onIconClick={onIconClick}\r\n                errorText={'Недопустимые символы'}\r\n                size={'default'} />)\r\n          }\r\n        </div>\r\n\r\n        <div className={'mb-20'}>\r\n          { REGISTER_REQUEST\r\n            ? (<Loader />)\r\n            : (\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"medium\"\r\n              >\r\n                Зарегистрироваться\r\n              </Button>\r\n            )\r\n          }\r\n        </div>\r\n      </form>\r\n\r\n      <p className={'text text_type_main-default text_color_inactive'}>\r\n      Уже зарегистрированы? <Link to='/login' className={styles.link}>Войти</Link>\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n","import {\r\n  FORM_REGISTER_SET_VALUE,\r\n  FORM_REGISTER_CLEAR_FORM\r\n} from '../constants/action-types';\r\n\r\n\r\ntype TFormSetData = { name: string; value: string; }\r\n\r\n// Action types\r\nexport type TSetValueAction = {\r\n  readonly type: typeof FORM_REGISTER_SET_VALUE;\r\n  readonly payload: TFormSetData;\r\n}\r\nexport type TClearFormAction = {\r\n  readonly type: typeof FORM_REGISTER_CLEAR_FORM;\r\n}\r\n\r\n\r\n// All types\r\nexport type TFormRegisterActions =\r\n  | TSetValueAction\r\n  | TClearFormAction;\r\n\r\n\r\n// Action creators\r\nexport const setValueAction =\r\n  (payload: TFormSetData): TSetValueAction => ({\r\n    type: FORM_REGISTER_SET_VALUE,\r\n    payload,\r\n  });\r\nexport const clearFormAction =\r\n  (): TClearFormAction => ({\r\n    type: FORM_REGISTER_CLEAR_FORM,\r\n  });\r\n","import {\r\n  FORM_RESET_PASSWORD_SET_VALUE,\r\n  FORM_RESET_PASSWORD_CLEAR_FORM,\r\n  FORM_RESET_PASSWORD_REQUEST,\r\n  FORM_RESET_PASSWORD_SUCCESS,\r\n  FORM_RESET_PASSWORD_FAILURE,\r\n} from '../constants/action-types';\r\nimport { resetPasswordRequest } from '../api';\r\nimport { AppThunk } from '../types';\r\n\r\n\r\ntype TFormSetData = { name: string; value: string; }\r\n\r\n// Action types\r\nexport type TSetValueAction = {\r\n  readonly type: typeof FORM_RESET_PASSWORD_SET_VALUE;\r\n  readonly payload: TFormSetData;\r\n}\r\nexport type TClearFormAction = {\r\n  readonly type: typeof FORM_RESET_PASSWORD_CLEAR_FORM;\r\n}\r\nexport type TRequestAction = {\r\n  readonly type: typeof FORM_RESET_PASSWORD_REQUEST;\r\n}\r\nexport type TSuccessAction = {\r\n  readonly type: typeof FORM_RESET_PASSWORD_SUCCESS;\r\n}\r\nexport type TFailureAction = {\r\n  readonly type: typeof FORM_RESET_PASSWORD_FAILURE;\r\n}\r\n\r\n\r\n// All types\r\nexport type TFormResetPasswordActions =\r\n  | TSetValueAction\r\n  | TClearFormAction\r\n  | TRequestAction\r\n  | TSuccessAction\r\n  | TFailureAction;\r\n\r\n\r\n// Action creators\r\nexport const setValueAction =\r\n  (payload: TFormSetData): TSetValueAction => ({\r\n    type: FORM_RESET_PASSWORD_SET_VALUE,\r\n    payload,\r\n  });\r\n\r\nexport const clearFormAction =\r\n  (): TClearFormAction => ({\r\n    type: FORM_RESET_PASSWORD_CLEAR_FORM,\r\n  });\r\n\r\nexport const requestAction =\r\n  (): TRequestAction => ({\r\n    type: FORM_RESET_PASSWORD_REQUEST,\r\n});\r\n\r\nexport const successAction =\r\n  (): TSuccessAction => ({\r\n    type: FORM_RESET_PASSWORD_SUCCESS,\r\n});\r\n\r\nexport const failureAction =\r\n  (): TFailureAction => ({\r\n    type: FORM_RESET_PASSWORD_FAILURE,\r\n  });\r\n\r\n\r\n// Async actions\r\nexport const resetPasswordAction: AppThunk =\r\n  () => async (dispatch, getState) => {\r\n    const formData = getState().formResetPassword.form;\r\n\r\n    dispatch(requestAction());\r\n\r\n    await resetPasswordRequest(formData)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        dispatch(failureAction());\r\n        throw new Error('Failed reset password request');\r\n      })\r\n      .then(data => {\r\n        if (data.success) {\r\n          dispatch(successAction());\r\n        }\r\n        return data;\r\n      })\r\n      .catch(err => {\r\n        dispatch(failureAction());\r\n        console.error(err);\r\n      });\r\n  };\r\n","import React, { useState, useEffect, useCallback, FC } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport {\r\n  setValueAction,\r\n  resetPasswordAction,\r\n  clearFormAction\r\n } from '../services/actions/form-reset-password';\r\n\r\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport Loader from '../components/loader/loader';\r\n\r\nimport styles from './page-layout.module.css';\r\n\r\n\r\nexport const ResetPasswordPage: FC<{}> = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const {\r\n    form,\r\n    RESET_PASSWORD_REQUEST,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAILURE\r\n  } = useSelector((store) => store.formResetPassword);\r\n  const { verifiedEmail } = useSelector((store) => store.formForgotPassword);\r\n  const [isPasswordValid, setIsPasswordValid] = useState<boolean>(true);\r\n  const [isPasswordVisable, setPasswordVisability] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (!verifiedEmail) {\r\n      history.replace({\r\n        pathname: '/forgot-password',\r\n      })\r\n    }\r\n    if (RESET_PASSWORD_SUCCESS) {\r\n      history.replace({\r\n        pathname: '/login',\r\n      })\r\n    }\r\n\r\n    return () => {\r\n      dispatch(clearFormAction());\r\n    };\r\n  }, [dispatch, history, verifiedEmail, RESET_PASSWORD_SUCCESS]);\r\n\r\n  const onInputChange = useCallback((\r\n    evt: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    if (evt.target.name === 'password') {\r\n      setIsPasswordValid(evt.target.value !== '');\r\n    }\r\n\r\n    dispatch(setValueAction({\r\n      name: evt.target.name,\r\n      value: evt.target.value,\r\n    }));\r\n  }, [dispatch]);\r\n\r\n  const handleSubmit = (evt: React.FormEvent) => {\r\n    evt.preventDefault();\r\n    if ( form.password !== ''\r\n      && form.token !== '') {\r\n        dispatch(resetPasswordAction());\r\n      }\r\n  };\r\n\r\n  const onIconClick = () => {\r\n    setPasswordVisability(!isPasswordVisable);\r\n  };\r\n\r\n  return (\r\n    <section className={`${styles.formContainer} pt-30`}>\r\n      <h1 className={`text text_type_main-medium mb-6`}>\r\n        Восстановление пароля\r\n      </h1>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={`${styles.inputWrapper} mb-6`}>\r\n          { isPasswordVisable\r\n            ? (\r\n              <Input\r\n                type={'text'}\r\n                placeholder={'Введите новый пароль'}\r\n                onChange={onInputChange}\r\n                icon={'HideIcon'}\r\n                value={form.password}\r\n                name={'password'}\r\n                error={!isPasswordValid}\r\n                onIconClick={onIconClick}\r\n                errorText={'Недопустимые символы'}\r\n                size={'default'} />\r\n              ) : (\r\n              <Input\r\n                type={'password'}\r\n                placeholder={'Введите новый пароль'}\r\n                onChange={onInputChange}\r\n                icon={'ShowIcon'}\r\n                value={form.password}\r\n                name={'password'}\r\n                error={false}\r\n                onIconClick={onIconClick}\r\n                errorText={'Недопустимые символы'}\r\n                size={'default'} />)\r\n          }\r\n        </div>\r\n\r\n        <div className={`${styles.inputWrapper} mb-6`}>\r\n          <Input\r\n            type={'text'}\r\n            placeholder={'Введите код из письма'}\r\n            onChange={onInputChange}\r\n            value={form.token}\r\n            name={'token'}\r\n            error={RESET_PASSWORD_FAILURE}\r\n            errorText={'Неверный код'}\r\n            size={'default'}\r\n          />\r\n        </div>\r\n\r\n        <div className={'mb-20'}>\r\n          { RESET_PASSWORD_REQUEST\r\n          ? (\r\n            <Loader />\r\n          )\r\n          : (\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"medium\"\r\n            >\r\n              Сохранить\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </form>\r\n\r\n      <p className={'text text_type_main-default text_color_inactive'}>\r\n        Вспомнили пароль? <Link to='/login' className={styles.link}>Войти</Link>\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport layoutStyles from './page-layout.module.css';\r\n\r\n\r\nexport const NotFound404: FC<{}> = () => {\r\n  return (\r\n    <div className={`${layoutStyles.pageContainer} text-center pt-30`}>\r\n      <h1 className={`text text_type_main-large mb-20`}>\r\n        404\r\n      </h1>\r\n\r\n      <p className={`text text_type_main-medium mb-4`}>\r\n        Страница не найдена\r\n      </p>\r\n      <p>\r\n        <Link to='/' className={`${layoutStyles.link}`}>\r\n          На главную\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './app-header.module.css';\r\n\r\n\r\nconst LinksUrl = {\r\n  HOME: '/',\r\n  FEED: '/feed',\r\n  PROFILE: '/profile',\r\n  LOGIN: '/login'\r\n};\r\n\r\n\r\nconst AppHeader: FC<{}> = () => {\r\n  const { user } = useSelector((store) => store.user);\r\n\r\n  return (\r\n    <header className={`${styles.header} pt-4 pb-4`}>\r\n      <div className={`${styles.header_container}`}>\r\n        <nav className={`${styles.appNavigation}`}>\r\n          <ul className={`${styles.list}`}>\r\n            <li className='mr-2 pt-4 pb-4 pl-5 pr-5'>\r\n              <NavLink\r\n                exact\r\n                to={`${LinksUrl.HOME}`}\r\n                className={`${styles.link} text text_type_main-default`}\r\n                activeClassName={`${styles.link} ${styles.link_active} text text_type_main-default`}\r\n              >\r\n                <i className='mr-2'>\r\n                  <BurgerIcon\r\n                    type='primary'\r\n                  />\r\n                </i>\r\n                Конструктор\r\n              </NavLink>\r\n            </li>\r\n            <li className='pt-4 pb-4 pl-5 pr-5'>\r\n              <NavLink\r\n                to={`${LinksUrl.FEED}`}\r\n                className={`${styles.link} text text_type_main-default`}\r\n                activeClassName={`${styles.link} ${styles.link_active} text text_type_main-default`}\r\n              >\r\n                <i className='mr-2'>\r\n                <ListIcon\r\n                  type='primary'\r\n                />\r\n                </i>\r\n                Лента заказов\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Link to={`${LinksUrl.HOME}`}>\r\n          <Logo />\r\n        </Link>\r\n\r\n        <ul className={`${styles.userMenu}`}>\r\n          <li className='pt-4 pb-4 pl-5 pr-5'>\r\n            { user\r\n              ? (\r\n                <Link\r\n                  to={`${LinksUrl.PROFILE}`}\r\n                  className={`${styles.link} text text_type_main-default`}\r\n                >\r\n                  <i className='mr-2'>\r\n                    <ProfileIcon type=\"secondary\" />\r\n                  </i>\r\n                  Личный кабинет\r\n                </Link>\r\n              )\r\n              : (\r\n                <Link\r\n                  to={`${LinksUrl.LOGIN}`}\r\n                  className={`${styles.link} text text_type_main-default`}\r\n                >\r\n                  <i className='mr-2'>\r\n                    <ListIcon type=\"secondary\" />\r\n                  </i>\r\n                  Войти\r\n                </Link>\r\n              )\r\n            }\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\n\r\nexport default AppHeader;\r\n","import React, { useEffect, useRef, useCallback, FC } from 'react';\r\n\r\nimport styles from './modal-overlay.module.css';\r\n\r\n\r\ntype TModalOverlayProps = {\r\n  closeModal: Function;\r\n  children: JSX.Element;\r\n}\r\n\r\nconst ModalOverlay: FC<TModalOverlayProps> = ({ closeModal, children }) => {\r\n  const overlayRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleClick = useCallback ((evt: React.MouseEvent<HTMLElement>) => {\r\n    if (evt.target === overlayRef.current) {\r\n      closeModal();\r\n    }\r\n  }, [closeModal]);\r\n\r\n  const handleEscPress = useCallback(\r\n    (evt: KeyboardEvent) => {\r\n      if (evt.key === 'Escape') {\r\n        evt.preventDefault();\r\n        closeModal();\r\n      }\r\n    },\r\n    [closeModal]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', handleEscPress);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscPress);\r\n    }\r\n  }, [handleEscPress]);\r\n\r\n  return (\r\n    <div\r\n      className={styles.overlay}\r\n      ref={overlayRef}\r\n      onClick={handleClick}\r\n    >\r\n      { children }\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default ModalOverlay;\r\n","import React, { FC } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport { useSelector } from '../../services/hooks';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\n\r\nimport styles from './modal.module.css';\r\n\r\n\r\ntype TModalProps = {\r\n  closeModal: React.MouseEventHandler;\r\n}\r\n\r\n\r\nconst modalRoot = document.getElementById('react-modals');\r\n\r\n\r\nconst Modal: FC<TModalProps> = ({ closeModal }) => {\r\n  const { isOpen, ComponentToView } = useSelector((store) => store.modal);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return modalRoot ? createPortal((\r\n    <ModalOverlay closeModal={closeModal}>\r\n      <section className={`${styles.modal} text pl-10 pr-10`}>\r\n        <button\r\n          className={styles.closeButton}\r\n          aria-label=\"Закрыть модальное окно\"\r\n          onClick={closeModal}\r\n        >\r\n          <i>\r\n            <CloseIcon type=\"primary\" />\r\n          </i>\r\n        </button>\r\n        { ComponentToView && <ComponentToView /> }\r\n      </section>\r\n    </ModalOverlay>\r\n  ), modalRoot) : null;\r\n};\r\n\r\n\r\nexport default Modal;\r\n","import React, { useEffect, FC } from 'react';\n\nimport { useDispatch, useSelector } from '../../services/hooks';\nimport { loadUserData } from '../../services/actions/user';\nimport { getIngredientsAction } from '../../services/actions/ingredients';\nimport { closeModalAction } from '../../services/actions/modal';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation,\n  useHistory\n} from \"react-router-dom\";\n\nimport ProtectedRoute from '../protected-route/protected-route';\nimport GuestRoute from '../guest-route/guest-route';\nimport {\n  FeedPage,\n  ForgotPasswordPage,\n  HomePage,\n  IngredientPage,\n  LoginPage,\n  OrderPage,\n  ProfilePage,\n  ProfileOrdersPage,\n  RegisterPage,\n  ResetPasswordPage,\n  NotFound404,\n} from '../../pages';\n\nimport AppHeader from '../app-header/app-header';\nimport Modal from '../modal/modal';\n\n\nconst ModalSwitch = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation<any>();\n  const background = (history.action === 'PUSH' || history.action === 'REPLACE')\n    && location.state\n    && location.state.background;\n  const { isOpen } = useSelector((store) => store.modal);\n\n  const handleModalClose = () => {\n    dispatch(closeModalAction());\n    history.goBack();\n  };\n\n  return (\n    <>\n      <AppHeader />\n\n      <main className='container'>\n        <Switch location={background || location}>\n          <Route path='/' exact>\n            <HomePage />\n          </Route>\n\n          <Route path='/login' exact>\n            <LoginPage />\n          </Route>\n\n          <GuestRoute path='/register' exact>\n            <RegisterPage />\n          </GuestRoute>\n\n          <GuestRoute path='/forgot-password' exact>\n            <ForgotPasswordPage />\n          </GuestRoute>\n\n          <GuestRoute path=\"/reset-password\" exact>\n            <ResetPasswordPage />\n          </GuestRoute>\n\n          <ProtectedRoute path='/profile' exact>\n            <ProfilePage />\n          </ProtectedRoute>\n\n          <ProtectedRoute path='/profile/orders' exact>\n            <ProfileOrdersPage />\n          </ProtectedRoute>\n\n          <Route path='/profile/orders/:orderNumber' exact>\n            <OrderPage />\n          </Route>\n\n          <Route path='/ingredients/:id' exact>\n            <IngredientPage />\n          </Route>\n\n          <Route path='/feed' exact>\n            <FeedPage />\n          </Route>\n\n          <Route path='/feed/:orderNumber' exact>\n            <OrderPage />\n          </Route>\n\n          <Route>\n            <NotFound404 />\n          </Route>\n        </Switch>\n\n        { background\n          && isOpen\n          && (\n            <Route path='/ingredients/:id' exact>\n              <Modal closeModal={handleModalClose}>\n              </Modal>\n            </Route>\n          )\n        }\n\n        { background\n          && isOpen\n          && (\n            <Route path='/order' exact>\n              <Modal closeModal={handleModalClose}>\n              </Modal>\n            </Route>\n          )\n        }\n\n        { background\n          && isOpen\n          && (\n            <Route path='/feed/:orderNumber' exact>\n              <Modal closeModal={handleModalClose}>\n              </Modal>\n            </Route>\n          )\n        }\n\n        { background\n          && isOpen\n          && (\n            <Route path='/profile/orders/:orderNumber' exact>\n              <Modal closeModal={handleModalClose}>\n              </Modal>\n            </Route>\n          )\n        }\n      </main>\n    </>\n  );\n};\n\n\nconst App: FC<{}> = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadUserData());\n    dispatch(getIngredientsAction());\n  }, [dispatch]);\n\n  return (\n    <Router basename=\"/praktikum_react-burger\">\n      <ModalSwitch />\n    </Router>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './services/store';\r\n\r\nimport App from './components/app/app';\r\n\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__3T-Sz\",\"header_container\":\"app-header_header_container__oOnWX\",\"list\":\"app-header_list__6JyTt\",\"appNavigation\":\"app-header_appNavigation__1lbYu app-header_list__6JyTt\",\"userMenu\":\"app-header_userMenu__20Grg app-header_list__6JyTt\",\"link\":\"app-header_link__sz-jy\",\"link_active\":\"app-header_link_active__2Kg7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ordersStatusContainer\":\"orders-summary_ordersStatusContainer__1wwoQ\",\"ordersStatusColumn\":\"orders-summary_ordersStatusColumn__yrUMv\",\"orderStatusTitle\":\"orders-summary_orderStatusTitle__lErS7\",\"ordersList\":\"orders-summary_ordersList__2I8LU\",\"orderId\":\"orders-summary_orderId__2x6-z\",\"orderId_done\":\"orders-summary_orderId_done__INXK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"orders-feed_list__iu6lR\",\"list_link\":\"orders-feed_list_link__1E9rU\",\"card\":\"orders-feed_card__1iMAG\",\"card_header\":\"orders-feed_card_header__z21ZA\",\"card_footer\":\"orders-feed_card_footer__OAfFw\",\"card_ingredientsPreview\":\"orders-feed_card_ingredientsPreview__7I3WF\",\"card_totalPrice\":\"orders-feed_card_totalPrice__w1hh8\",\"card_totalPriceIcon\":\"orders-feed_card_totalPriceIcon__r-sHs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"profile_pageContainer__1E4qi page-layout_pageContainer__1eiFg\",\"columnsContainer\":\"profile_columnsContainer__3Dp6T\",\"navContainer\":\"profile_navContainer__1avUQ\",\"profileContent\":\"profile_profileContent__3XsT_\",\"profileForm\":\"profile_profileForm__BcVID\",\"profileForm_controls\":\"profile_profileForm_controls__2uAhh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"ingredient_pageContainer__2wjfX\",\"loaderContainer\":\"ingredient_loaderContainer__26UZT\",\"container\":\"ingredient_container__2imcp\",\"title\":\"ingredient_title__10Qry\",\"ingredientName\":\"ingredient_ingredientName__2EEBG\",\"composition\":\"ingredient_composition__MfBc9\",\"compositionItem\":\"ingredient_compositionItem__EsXTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"ingredient-details_loaderContainer__1yImu\",\"title\":\"ingredient-details_title__bi6aP\",\"ingredientName\":\"ingredient-details_ingredientName__2OOEs\",\"composition\":\"ingredient-details_composition__3yghT\",\"compositionItem\":\"ingredient-details_compositionItem__23sVv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"profile-navigation_list__WmqNb\",\"list_item\":\"profile-navigation_list_item__22ER3\",\"navLink\":\"profile-navigation_navLink__3YyAb\",\"navLink_active\":\"profile-navigation_navLink_active__1D3hT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"order-card_card__11GMJ\",\"card_header\":\"order-card_card_header__3UO4c\",\"card_footer\":\"order-card_card_footer__3Wfij\",\"card_ingredientsPreview\":\"order-card_card_ingredientsPreview__1WvsP\",\"orderName\":\"order-card_orderName__2iV06\",\"card_totalPrice\":\"order-card_card_totalPrice__2Usov\",\"card_totalPriceIcon\":\"order-card_card_totalPriceIcon__3i8WV\",\"orderStatus\":\"order-card_orderStatus__DpwC5\",\"statusDone\":\"order-card_statusDone__DsWc1\",\"statusInWork\":\"order-card_statusInWork__8cQ72\",\"statusCanseled\":\"order-card_statusCanseled__3qwrS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"preview-item_item__m2sKU\",\"item_last\":\"preview-item_item_last__1K_Mf\",\"more\":\"preview-item_more__3Qc78\",\"count\":\"preview-item_count__32EBU\",\"image\":\"preview-item_image__29E6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"burger-ingredient-card_card__BXFj1\",\"image\":\"burger-ingredient-card_image__2U5r_\",\"price\":\"burger-ingredient-card_price__3pV7x\",\"title\":\"burger-ingredient-card_title__1BtGy\",\"counter\":\"burger-ingredient-card_counter__1uylq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order-details_order__21gL-\",\"orderId\":\"order-details_orderId__NIjzD\",\"orderText\":\"order-details_orderText__zmRbp\",\"text\":\"order-details_text__1nUW6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form-profile-update-user_form__257tH\",\"formControls\":\"form-profile-update-user_formControls__3woWU\",\"inputWrapper\":\"form-profile-update-user_inputWrapper__2BzEM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"user-orders_loaderContainer__1caCB\",\"list\":\"user-orders_list__1Rjy2\",\"list_link\":\"user-orders_list_link__F6dVm\",\"link\":\"user-orders_link__In-g5\",\"link_active\":\"user-orders_link_active__1syWG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"burger-ingredients_sectionTitle__32THE\",\"navigation\":\"burger-ingredients_navigation__1H51C\",\"catalog\":\"burger-ingredients_catalog__18i6v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"page-layout_pageContainer__1eiFg\",\"loaderContainer\":\"page-layout_loaderContainer__3ig_8\",\"formContainer\":\"page-layout_formContainer__TGvcB\",\"form\":\"page-layout_form__Hbjxs\",\"inputWrapper\":\"page-layout_inputWrapper__3H-pJ\",\"link\":\"page-layout_link__1elY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"order-status_default__dmg5L\",\"created\":\"order-status_created__3NgX1\",\"pending\":\"order-status_pending__3kv5P\",\"done\":\"order-status_done__30wG2\",\"canseled\":\"order-status_canseled__39C1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ingredient-section_title__3oHo4\",\"items\":\"ingredient-section_items__2lfHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__uhZXp\",\"closeButton\":\"modal_closeButton__hIDb7\"};"],"sourceRoot":""}